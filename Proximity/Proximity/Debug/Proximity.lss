
Proximity.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  00000f3e  00000fd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800234  00800234  00001006  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001006  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001038  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001963  00000000  00000000  00001158  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ec8  00000000  00000000  00002abb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000abe  00000000  00000000  00003983  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00004444  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000735  00000000  00000000  00004640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bcd  00000000  00000000  00004d75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00005942  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
   2:	00 00       	nop
   4:	cf c0       	rjmp	.+414    	; 0x1a4 <__bad_interrupt>
   6:	00 00       	nop
   8:	cd c0       	rjmp	.+410    	; 0x1a4 <__bad_interrupt>
   a:	00 00       	nop
   c:	cb c0       	rjmp	.+406    	; 0x1a4 <__bad_interrupt>
   e:	00 00       	nop
  10:	c9 c0       	rjmp	.+402    	; 0x1a4 <__bad_interrupt>
  12:	00 00       	nop
  14:	c7 c0       	rjmp	.+398    	; 0x1a4 <__bad_interrupt>
  16:	00 00       	nop
  18:	c5 c0       	rjmp	.+394    	; 0x1a4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c3 c0       	rjmp	.+390    	; 0x1a4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	c1 c0       	rjmp	.+386    	; 0x1a4 <__bad_interrupt>
  22:	00 00       	nop
  24:	bf c0       	rjmp	.+382    	; 0x1a4 <__bad_interrupt>
  26:	00 00       	nop
  28:	bd c0       	rjmp	.+378    	; 0x1a4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	bb c0       	rjmp	.+374    	; 0x1a4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b9 c0       	rjmp	.+370    	; 0x1a4 <__bad_interrupt>
  32:	00 00       	nop
  34:	b7 c0       	rjmp	.+366    	; 0x1a4 <__bad_interrupt>
  36:	00 00       	nop
  38:	b5 c0       	rjmp	.+362    	; 0x1a4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b3 c0       	rjmp	.+358    	; 0x1a4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	b1 c0       	rjmp	.+354    	; 0x1a4 <__bad_interrupt>
  42:	00 00       	nop
  44:	af c0       	rjmp	.+350    	; 0x1a4 <__bad_interrupt>
  46:	00 00       	nop
  48:	ad c0       	rjmp	.+346    	; 0x1a4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	ab c0       	rjmp	.+342    	; 0x1a4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a9 c0       	rjmp	.+338    	; 0x1a4 <__bad_interrupt>
  52:	00 00       	nop
  54:	a7 c0       	rjmp	.+334    	; 0x1a4 <__bad_interrupt>
  56:	00 00       	nop
  58:	a5 c0       	rjmp	.+330    	; 0x1a4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a3 c0       	rjmp	.+326    	; 0x1a4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	a1 c0       	rjmp	.+322    	; 0x1a4 <__bad_interrupt>
  62:	00 00       	nop
  64:	9f c0       	rjmp	.+318    	; 0x1a4 <__bad_interrupt>
  66:	00 00       	nop
  68:	9d c0       	rjmp	.+314    	; 0x1a4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	9b c0       	rjmp	.+310    	; 0x1a4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	99 c0       	rjmp	.+306    	; 0x1a4 <__bad_interrupt>
  72:	00 00       	nop
  74:	97 c0       	rjmp	.+302    	; 0x1a4 <__bad_interrupt>
  76:	00 00       	nop
  78:	95 c0       	rjmp	.+298    	; 0x1a4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	93 c0       	rjmp	.+294    	; 0x1a4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	91 c0       	rjmp	.+290    	; 0x1a4 <__bad_interrupt>
  82:	00 00       	nop
  84:	8f c0       	rjmp	.+286    	; 0x1a4 <__bad_interrupt>
  86:	00 00       	nop
  88:	8d c0       	rjmp	.+282    	; 0x1a4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	8b c0       	rjmp	.+278    	; 0x1a4 <__bad_interrupt>
  8e:	00 00       	nop
  90:	89 c0       	rjmp	.+274    	; 0x1a4 <__bad_interrupt>
  92:	00 00       	nop
  94:	87 c0       	rjmp	.+270    	; 0x1a4 <__bad_interrupt>
  96:	00 00       	nop
  98:	85 c0       	rjmp	.+266    	; 0x1a4 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	83 c0       	rjmp	.+262    	; 0x1a4 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	81 c0       	rjmp	.+258    	; 0x1a4 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	7f c0       	rjmp	.+254    	; 0x1a4 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	7d c0       	rjmp	.+250    	; 0x1a4 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	7b c0       	rjmp	.+246    	; 0x1a4 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	79 c0       	rjmp	.+242    	; 0x1a4 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	77 c0       	rjmp	.+238    	; 0x1a4 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	75 c0       	rjmp	.+234    	; 0x1a4 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	73 c0       	rjmp	.+230    	; 0x1a4 <__bad_interrupt>
  be:	00 00       	nop
  c0:	71 c0       	rjmp	.+226    	; 0x1a4 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	6f c0       	rjmp	.+222    	; 0x1a4 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	6d c0       	rjmp	.+218    	; 0x1a4 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	6b c0       	rjmp	.+214    	; 0x1a4 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	69 c0       	rjmp	.+210    	; 0x1a4 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	67 c0       	rjmp	.+206    	; 0x1a4 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	65 c0       	rjmp	.+202    	; 0x1a4 <__bad_interrupt>
  da:	00 00       	nop
  dc:	63 c0       	rjmp	.+198    	; 0x1a4 <__bad_interrupt>
  de:	00 00       	nop
  e0:	61 c0       	rjmp	.+194    	; 0x1a4 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	07 63       	ori	r16, 0x37	; 55
  e6:	42 36       	cpi	r20, 0x62	; 98
  e8:	b7 9b       	sbis	0x16, 7	; 22
  ea:	d8 a7       	std	Y+40, r29	; 0x28
  ec:	1a 39       	cpi	r17, 0x9A	; 154
  ee:	68 56       	subi	r22, 0x68	; 104
  f0:	18 ae       	std	Y+56, r1	; 0x38
  f2:	ba ab       	std	Y+50, r27	; 0x32
  f4:	55 8c       	ldd	r5, Z+29	; 0x1d
  f6:	1d 3c       	cpi	r17, 0xCD	; 205
  f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
  fa:	57 63       	ori	r21, 0x37	; 55
  fc:	bd 6d       	ori	r27, 0xDD	; 221
  fe:	ed fd       	.word	0xfded	; ????
 100:	75 3e       	cpi	r23, 0xE5	; 229
 102:	f6 17       	cp	r31, r22
 104:	72 31       	cpi	r23, 0x12	; 18
 106:	bf 00       	.word	0x00bf	; ????
 108:	00 00       	nop
 10a:	80 3f       	cpi	r24, 0xF0	; 240
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 00       	nop
 110:	be 92       	st	-X, r11
 112:	24 49       	sbci	r18, 0x94	; 148
 114:	12 3e       	cpi	r17, 0xE2	; 226
 116:	ab aa       	std	Y+51, r10	; 0x33
 118:	aa 2a       	or	r10, r26
 11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
 11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
 11e:	4c 3e       	cpi	r20, 0xEC	; 236
 120:	00 00       	nop
 122:	00 80       	ld	r0, Z
 124:	be ab       	std	Y+54, r27	; 0x36
 126:	aa aa       	std	Y+50, r10	; 0x32
 128:	aa 3e       	cpi	r26, 0xEA	; 234
 12a:	00 00       	nop
 12c:	00 00       	nop
 12e:	bf 00       	.word	0x00bf	; ????
 130:	00 00       	nop
 132:	80 3f       	cpi	r24, 0xF0	; 240
 134:	00 00       	nop
 136:	00 00       	nop
 138:	00 08       	sbc	r0, r0
 13a:	41 78       	andi	r20, 0x81	; 129
 13c:	d3 bb       	out	0x13, r29	; 19
 13e:	43 87       	std	Z+11, r20	; 0x0b
 140:	d1 13       	cpse	r29, r17
 142:	3d 19       	sub	r19, r13
 144:	0e 3c       	cpi	r16, 0xCE	; 206
 146:	c3 bd       	out	0x23, r28	; 35
 148:	42 82       	std	Z+2, r4	; 0x02
 14a:	ad 2b       	or	r26, r29
 14c:	3e 68       	ori	r19, 0x8E	; 142
 14e:	ec 82       	std	Y+4, r14	; 0x04
 150:	76 be       	out	0x36, r7	; 54
 152:	d9 8f       	std	Y+25, r29	; 0x19
 154:	e1 a9       	ldd	r30, Z+49	; 0x31
 156:	3e 4c       	sbci	r19, 0xCE	; 206
 158:	80 ef       	ldi	r24, 0xF0	; 240
 15a:	ff be       	out	0x3f, r15	; 63
 15c:	01 c4       	rjmp	.+2050   	; 0x960 <__floatsisf+0x4>
 15e:	ff 7f       	andi	r31, 0xFF	; 255
 160:	3f 00       	.word	0x003f	; ????
 162:	00 00       	nop
	...

00000166 <__ctors_end>:
 166:	11 24       	eor	r1, r1
 168:	1f be       	out	0x3f, r1	; 63
 16a:	cf ef       	ldi	r28, 0xFF	; 255
 16c:	d1 e2       	ldi	r29, 0x21	; 33
 16e:	de bf       	out	0x3e, r29	; 62
 170:	cd bf       	out	0x3d, r28	; 61
 172:	00 e0       	ldi	r16, 0x00	; 0
 174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
 176:	12 e0       	ldi	r17, 0x02	; 2
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b2 e0       	ldi	r27, 0x02	; 2
 17c:	ee e3       	ldi	r30, 0x3E	; 62
 17e:	ff e0       	ldi	r31, 0x0F	; 15
 180:	00 e0       	ldi	r16, 0x00	; 0
 182:	0b bf       	out	0x3b, r16	; 59
 184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
 186:	07 90       	elpm	r0, Z+
 188:	0d 92       	st	X+, r0
 18a:	a4 33       	cpi	r26, 0x34	; 52
 18c:	b1 07       	cpc	r27, r17
 18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
 190:	22 e0       	ldi	r18, 0x02	; 2
 192:	a4 e3       	ldi	r26, 0x34	; 52
 194:	b2 e0       	ldi	r27, 0x02	; 2
 196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
 198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
 19a:	a0 34       	cpi	r26, 0x40	; 64
 19c:	b2 07       	cpc	r27, r18
 19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
 1a0:	07 d3       	rcall	.+1550   	; 0x7b0 <main>
 1a2:	cb c6       	rjmp	.+3478   	; 0xf3a <_exit>

000001a4 <__bad_interrupt>:
 1a4:	2d cf       	rjmp	.-422    	; 0x0 <__vectors>

000001a6 <lcd_port_config>:
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
 1a6:	87 b1       	in	r24, 0x07	; 7
 1a8:	87 6f       	ori	r24, 0xF7	; 247
 1aa:	87 b9       	out	0x07, r24	; 7
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	88 70       	andi	r24, 0x08	; 8
 1b0:	88 b9       	out	0x08, r24	; 8
 1b2:	08 95       	ret

000001b4 <lcd_set_4bit>:
 1b4:	86 e6       	ldi	r24, 0x66	; 102
 1b6:	9e e0       	ldi	r25, 0x0E	; 14
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <lcd_set_4bit+0x4>
 1bc:	00 00       	nop
 1be:	88 b1       	in	r24, 0x08	; 8
 1c0:	8e 7f       	andi	r24, 0xFE	; 254
 1c2:	88 b9       	out	0x08, r24	; 8
 1c4:	88 b1       	in	r24, 0x08	; 8
 1c6:	8d 7f       	andi	r24, 0xFD	; 253
 1c8:	88 b9       	out	0x08, r24	; 8
 1ca:	80 e3       	ldi	r24, 0x30	; 48
 1cc:	88 b9       	out	0x08, r24	; 8
 1ce:	98 b1       	in	r25, 0x08	; 8
 1d0:	94 60       	ori	r25, 0x04	; 4
 1d2:	98 b9       	out	0x08, r25	; 8
 1d4:	ef ef       	ldi	r30, 0xFF	; 255
 1d6:	f7 e4       	ldi	r31, 0x47	; 71
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcd_set_4bit+0x24>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_set_4bit+0x2a>
 1de:	00 00       	nop
 1e0:	98 b1       	in	r25, 0x08	; 8
 1e2:	9b 7f       	andi	r25, 0xFB	; 251
 1e4:	98 b9       	out	0x08, r25	; 8
 1e6:	e6 e6       	ldi	r30, 0x66	; 102
 1e8:	fe e0       	ldi	r31, 0x0E	; 14
 1ea:	31 97       	sbiw	r30, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <lcd_set_4bit+0x36>
 1ee:	00 00       	nop
 1f0:	98 b1       	in	r25, 0x08	; 8
 1f2:	9e 7f       	andi	r25, 0xFE	; 254
 1f4:	98 b9       	out	0x08, r25	; 8
 1f6:	98 b1       	in	r25, 0x08	; 8
 1f8:	9d 7f       	andi	r25, 0xFD	; 253
 1fa:	98 b9       	out	0x08, r25	; 8
 1fc:	88 b9       	out	0x08, r24	; 8
 1fe:	98 b1       	in	r25, 0x08	; 8
 200:	94 60       	ori	r25, 0x04	; 4
 202:	98 b9       	out	0x08, r25	; 8
 204:	ef ef       	ldi	r30, 0xFF	; 255
 206:	f7 e4       	ldi	r31, 0x47	; 71
 208:	31 97       	sbiw	r30, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <lcd_set_4bit+0x54>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <lcd_set_4bit+0x5a>
 20e:	00 00       	nop
 210:	98 b1       	in	r25, 0x08	; 8
 212:	9b 7f       	andi	r25, 0xFB	; 251
 214:	98 b9       	out	0x08, r25	; 8
 216:	e6 e6       	ldi	r30, 0x66	; 102
 218:	fe e0       	ldi	r31, 0x0E	; 14
 21a:	31 97       	sbiw	r30, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <lcd_set_4bit+0x66>
 21e:	00 00       	nop
 220:	98 b1       	in	r25, 0x08	; 8
 222:	9e 7f       	andi	r25, 0xFE	; 254
 224:	98 b9       	out	0x08, r25	; 8
 226:	98 b1       	in	r25, 0x08	; 8
 228:	9d 7f       	andi	r25, 0xFD	; 253
 22a:	98 b9       	out	0x08, r25	; 8
 22c:	88 b9       	out	0x08, r24	; 8
 22e:	88 b1       	in	r24, 0x08	; 8
 230:	84 60       	ori	r24, 0x04	; 4
 232:	88 b9       	out	0x08, r24	; 8
 234:	8f ef       	ldi	r24, 0xFF	; 255
 236:	97 e4       	ldi	r25, 0x47	; 71
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <lcd_set_4bit+0x84>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <lcd_set_4bit+0x8a>
 23e:	00 00       	nop
 240:	88 b1       	in	r24, 0x08	; 8
 242:	8b 7f       	andi	r24, 0xFB	; 251
 244:	88 b9       	out	0x08, r24	; 8
 246:	e6 e6       	ldi	r30, 0x66	; 102
 248:	fe e0       	ldi	r31, 0x0E	; 14
 24a:	31 97       	sbiw	r30, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <lcd_set_4bit+0x96>
 24e:	00 00       	nop
 250:	88 b1       	in	r24, 0x08	; 8
 252:	8e 7f       	andi	r24, 0xFE	; 254
 254:	88 b9       	out	0x08, r24	; 8
 256:	88 b1       	in	r24, 0x08	; 8
 258:	8d 7f       	andi	r24, 0xFD	; 253
 25a:	88 b9       	out	0x08, r24	; 8
 25c:	80 e2       	ldi	r24, 0x20	; 32
 25e:	88 b9       	out	0x08, r24	; 8
 260:	88 b1       	in	r24, 0x08	; 8
 262:	84 60       	ori	r24, 0x04	; 4
 264:	88 b9       	out	0x08, r24	; 8
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	97 e4       	ldi	r25, 0x47	; 71
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <lcd_set_4bit+0xb6>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <lcd_set_4bit+0xbc>
 270:	00 00       	nop
 272:	88 b1       	in	r24, 0x08	; 8
 274:	8b 7f       	andi	r24, 0xFB	; 251
 276:	88 b9       	out	0x08, r24	; 8
 278:	08 95       	ret

0000027a <lcd_wr_command>:
 27a:	38 2f       	mov	r19, r24
 27c:	30 7f       	andi	r19, 0xF0	; 240
 27e:	28 b1       	in	r18, 0x08	; 8
 280:	2f 70       	andi	r18, 0x0F	; 15
 282:	28 b9       	out	0x08, r18	; 8
 284:	98 b1       	in	r25, 0x08	; 8
 286:	93 2b       	or	r25, r19
 288:	98 b9       	out	0x08, r25	; 8
 28a:	98 b1       	in	r25, 0x08	; 8
 28c:	9e 7f       	andi	r25, 0xFE	; 254
 28e:	98 b9       	out	0x08, r25	; 8
 290:	98 b1       	in	r25, 0x08	; 8
 292:	9d 7f       	andi	r25, 0xFD	; 253
 294:	98 b9       	out	0x08, r25	; 8
 296:	98 b1       	in	r25, 0x08	; 8
 298:	94 60       	ori	r25, 0x04	; 4
 29a:	98 b9       	out	0x08, r25	; 8
 29c:	ef ef       	ldi	r30, 0xFF	; 255
 29e:	f7 e4       	ldi	r31, 0x47	; 71
 2a0:	31 97       	sbiw	r30, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcd_wr_command+0x26>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <lcd_wr_command+0x2c>
 2a6:	00 00       	nop
 2a8:	98 b1       	in	r25, 0x08	; 8
 2aa:	9b 7f       	andi	r25, 0xFB	; 251
 2ac:	98 b9       	out	0x08, r25	; 8
 2ae:	82 95       	swap	r24
 2b0:	80 7f       	andi	r24, 0xF0	; 240
 2b2:	98 b1       	in	r25, 0x08	; 8
 2b4:	9f 70       	andi	r25, 0x0F	; 15
 2b6:	98 b9       	out	0x08, r25	; 8
 2b8:	98 b1       	in	r25, 0x08	; 8
 2ba:	89 2b       	or	r24, r25
 2bc:	88 b9       	out	0x08, r24	; 8
 2be:	88 b1       	in	r24, 0x08	; 8
 2c0:	8e 7f       	andi	r24, 0xFE	; 254
 2c2:	88 b9       	out	0x08, r24	; 8
 2c4:	88 b1       	in	r24, 0x08	; 8
 2c6:	8d 7f       	andi	r24, 0xFD	; 253
 2c8:	88 b9       	out	0x08, r24	; 8
 2ca:	88 b1       	in	r24, 0x08	; 8
 2cc:	84 60       	ori	r24, 0x04	; 4
 2ce:	88 b9       	out	0x08, r24	; 8
 2d0:	8f ef       	ldi	r24, 0xFF	; 255
 2d2:	97 e4       	ldi	r25, 0x47	; 71
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <lcd_wr_command+0x5a>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <lcd_wr_command+0x60>
 2da:	00 00       	nop
 2dc:	88 b1       	in	r24, 0x08	; 8
 2de:	8b 7f       	andi	r24, 0xFB	; 251
 2e0:	88 b9       	out	0x08, r24	; 8
 2e2:	08 95       	ret

000002e4 <lcd_init>:
 2e4:	67 df       	rcall	.-306    	; 0x1b4 <lcd_set_4bit>
 2e6:	86 e6       	ldi	r24, 0x66	; 102
 2e8:	9e e0       	ldi	r25, 0x0E	; 14
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <lcd_init+0x6>
 2ee:	00 00       	nop
 2f0:	88 e2       	ldi	r24, 0x28	; 40
 2f2:	c3 df       	rcall	.-122    	; 0x27a <lcd_wr_command>
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	c1 df       	rcall	.-126    	; 0x27a <lcd_wr_command>
 2f8:	86 e0       	ldi	r24, 0x06	; 6
 2fa:	bf df       	rcall	.-130    	; 0x27a <lcd_wr_command>
 2fc:	8e e0       	ldi	r24, 0x0E	; 14
 2fe:	bd df       	rcall	.-134    	; 0x27a <lcd_wr_command>
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	bb cf       	rjmp	.-138    	; 0x27a <lcd_wr_command>
 304:	08 95       	ret

00000306 <lcd_home>:
 306:	80 e8       	ldi	r24, 0x80	; 128
 308:	b8 cf       	rjmp	.-144    	; 0x27a <lcd_wr_command>
 30a:	08 95       	ret

0000030c <lcd_cursor>:
 30c:	82 30       	cpi	r24, 0x02	; 2
 30e:	69 f0       	breq	.+26     	; 0x32a <lcd_cursor+0x1e>
 310:	18 f4       	brcc	.+6      	; 0x318 <lcd_cursor+0xc>
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	31 f0       	breq	.+12     	; 0x322 <lcd_cursor+0x16>
 316:	08 95       	ret
 318:	83 30       	cpi	r24, 0x03	; 3
 31a:	59 f0       	breq	.+22     	; 0x332 <lcd_cursor+0x26>
 31c:	84 30       	cpi	r24, 0x04	; 4
 31e:	69 f0       	breq	.+26     	; 0x33a <lcd_cursor+0x2e>
 320:	08 95       	ret
 322:	8f e7       	ldi	r24, 0x7F	; 127
 324:	86 0f       	add	r24, r22
 326:	a9 cf       	rjmp	.-174    	; 0x27a <lcd_wr_command>
 328:	08 95       	ret
 32a:	8f eb       	ldi	r24, 0xBF	; 191
 32c:	86 0f       	add	r24, r22
 32e:	a5 cf       	rjmp	.-182    	; 0x27a <lcd_wr_command>
 330:	08 95       	ret
 332:	83 e9       	ldi	r24, 0x93	; 147
 334:	86 0f       	add	r24, r22
 336:	a1 cf       	rjmp	.-190    	; 0x27a <lcd_wr_command>
 338:	08 95       	ret
 33a:	83 ed       	ldi	r24, 0xD3	; 211
 33c:	86 0f       	add	r24, r22
 33e:	9d cf       	rjmp	.-198    	; 0x27a <lcd_wr_command>
 340:	08 95       	ret

00000342 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
 342:	cf 93       	push	r28
 344:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
 346:	e2 df       	rcall	.-60     	; 0x30c <lcd_cursor>
	
	char temp;
	temp = alpha_num_char;
	temp = (temp & 0xF0);
 348:	2c 2f       	mov	r18, r28
 34a:	20 7f       	andi	r18, 0xF0	; 240
	lcd_port &= 0x0F;
 34c:	98 b1       	in	r25, 0x08	; 8
 34e:	9f 70       	andi	r25, 0x0F	; 15
 350:	98 b9       	out	0x08, r25	; 8
	lcd_port |= temp;
 352:	88 b1       	in	r24, 0x08	; 8
 354:	82 2b       	or	r24, r18
 356:	88 b9       	out	0x08, r24	; 8
	sbit(lcd_port,RS);
 358:	88 b1       	in	r24, 0x08	; 8
 35a:	81 60       	ori	r24, 0x01	; 1
 35c:	88 b9       	out	0x08, r24	; 8
	cbit(lcd_port,RW);
 35e:	88 b1       	in	r24, 0x08	; 8
 360:	8d 7f       	andi	r24, 0xFD	; 253
 362:	88 b9       	out	0x08, r24	; 8
	sbit(lcd_port,EN);
 364:	88 b1       	in	r24, 0x08	; 8
 366:	84 60       	ori	r24, 0x04	; 4
 368:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36a:	8f ef       	ldi	r24, 0xFF	; 255
 36c:	97 e4       	ldi	r25, 0x47	; 71
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <lcd_wr_char+0x2c>
 372:	00 c0       	rjmp	.+0      	; 0x374 <lcd_wr_char+0x32>
 374:	00 00       	nop
	_delay_ms(5);
	cbit(lcd_port,EN);
 376:	88 b1       	in	r24, 0x08	; 8
 378:	8b 7f       	andi	r24, 0xFB	; 251
 37a:	88 b9       	out	0x08, r24	; 8

	alpha_num_char = alpha_num_char & 0x0F;
	alpha_num_char = alpha_num_char << 4;
 37c:	c2 95       	swap	r28
 37e:	c0 7f       	andi	r28, 0xF0	; 240
	lcd_port &= 0x0F;
 380:	88 b1       	in	r24, 0x08	; 8
 382:	8f 70       	andi	r24, 0x0F	; 15
 384:	88 b9       	out	0x08, r24	; 8
	lcd_port |= alpha_num_char;
 386:	88 b1       	in	r24, 0x08	; 8
 388:	c8 2b       	or	r28, r24
 38a:	c8 b9       	out	0x08, r28	; 8
	sbit(lcd_port,RS);
 38c:	88 b1       	in	r24, 0x08	; 8
 38e:	81 60       	ori	r24, 0x01	; 1
 390:	88 b9       	out	0x08, r24	; 8
	cbit(lcd_port,RW);
 392:	88 b1       	in	r24, 0x08	; 8
 394:	8d 7f       	andi	r24, 0xFD	; 253
 396:	88 b9       	out	0x08, r24	; 8
	sbit(lcd_port,EN);
 398:	88 b1       	in	r24, 0x08	; 8
 39a:	84 60       	ori	r24, 0x04	; 4
 39c:	88 b9       	out	0x08, r24	; 8
 39e:	8f ef       	ldi	r24, 0xFF	; 255
 3a0:	97 e4       	ldi	r25, 0x47	; 71
 3a2:	01 97       	sbiw	r24, 0x01	; 1
 3a4:	f1 f7       	brne	.-4      	; 0x3a2 <lcd_wr_char+0x60>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <lcd_wr_char+0x66>
 3a8:	00 00       	nop
	_delay_ms(5);
	cbit(lcd_port,EN);
 3aa:	88 b1       	in	r24, 0x08	; 8
 3ac:	8b 7f       	andi	r24, 0xFB	; 251
 3ae:	88 b9       	out	0x08, r24	; 8
}
 3b0:	cf 91       	pop	r28
 3b2:	08 95       	ret

000003b4 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
 3b4:	0f 93       	push	r16
 3b6:	1f 93       	push	r17
 3b8:	cf 93       	push	r28
 3ba:	df 93       	push	r29
 3bc:	08 2f       	mov	r16, r24
 3be:	16 2f       	mov	r17, r22
 3c0:	ea 01       	movw	r28, r20
	while(*str != '\0')
 3c2:	05 c0       	rjmp	.+10     	; 0x3ce <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
 3c4:	61 2f       	mov	r22, r17
 3c6:	80 2f       	mov	r24, r16
 3c8:	bc df       	rcall	.-136    	; 0x342 <lcd_wr_char>
		str++;
 3ca:	21 96       	adiw	r28, 0x01	; 1
		column+=1;
 3cc:	1f 5f       	subi	r17, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
 3ce:	48 81       	ld	r20, Y
 3d0:	41 11       	cpse	r20, r1
 3d2:	f8 cf       	rjmp	.-16     	; 0x3c4 <lcd_string+0x10>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	0f 91       	pop	r16
 3dc:	08 95       	ret

000003de <lcd_numeric_value>:
 * Output: This function prints any integer value or value in a variable as integer
  *        on the specified location and up to the specified number of digits on LCD
 * Example Call: lcd_numeric_value(1, 1, -20, 2);
 */
void lcd_numeric_value(char row, char column, int val, int digits)
{
 3de:	ef 92       	push	r14
 3e0:	ff 92       	push	r15
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	d8 2f       	mov	r29, r24
 3ec:	c6 2f       	mov	r28, r22
 3ee:	7a 01       	movw	r14, r20
 3f0:	89 01       	movw	r16, r18
	lcd_cursor(row, column);
 3f2:	8c df       	rcall	.-232    	; 0x30c <lcd_cursor>
	
	if (val < 0)
 3f4:	ff 20       	and	r15, r15
 3f6:	4c f4       	brge	.+18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	{
		val = 0 - val;
 3f8:	f1 94       	neg	r15
 3fa:	e1 94       	neg	r14
 3fc:	f1 08       	sbc	r15, r1
		lcd_string(row, column, "-");
 3fe:	48 e2       	ldi	r20, 0x28	; 40
 400:	52 e0       	ldi	r21, 0x02	; 2
 402:	6c 2f       	mov	r22, r28
 404:	8d 2f       	mov	r24, r29
 406:	d6 df       	rcall	.-84     	; 0x3b4 <lcd_string>
		column+=1;
 408:	cf 5f       	subi	r28, 0xFF	; 255
	}
		
	unsigned char flag = 0;
	
	if(row == 0 || column == 0)
 40a:	dd 23       	and	r29, r29
 40c:	11 f0       	breq	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	c1 11       	cpse	r28, r1
	{
		lcd_home();
 410:	02 c0       	rjmp	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	79 df       	rcall	.-270    	; 0x306 <lcd_home>
	}
	
	else
	{
		lcd_cursor(row, column);
 414:	03 c0       	rjmp	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 416:	6c 2f       	mov	r22, r28
 418:	8d 2f       	mov	r24, r29
 41a:	78 df       	rcall	.-272    	; 0x30c <lcd_cursor>
	}
	
	if(digits == 5 || flag == 1)
 41c:	05 30       	cpi	r16, 0x05	; 5
 41e:	11 05       	cpc	r17, r1
	{
		million = val/10000+48;
 420:	89 f4       	brne	.+34     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 422:	c7 01       	movw	r24, r14
 424:	60 e1       	ldi	r22, 0x10	; 16
 426:	77 e2       	ldi	r23, 0x27	; 39
 428:	52 d5       	rcall	.+2724   	; 0xece <__divmodhi4>
 42a:	ab 01       	movw	r20, r22
 42c:	40 5d       	subi	r20, 0xD0	; 208
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	40 93 34 02 	sts	0x0234, r20	; 0x800234 <__data_end>
 434:	50 93 35 02 	sts	0x0235, r21	; 0x800235 <__data_end+0x1>
		lcd_wr_char(row ,column, million);
 438:	6c 2f       	mov	r22, r28
 43a:	8d 2f       	mov	r24, r29
 43c:	82 df       	rcall	.-252    	; 0x342 <lcd_wr_char>
		column+=1;
 43e:	cf 5f       	subi	r28, 0xFF	; 255
		flag = 1;
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	01 c0       	rjmp	.+2      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
		val = 0 - val;
		lcd_string(row, column, "-");
		column+=1;
	}
		
	unsigned char flag = 0;
 444:	80 e0       	ldi	r24, 0x00	; 0
		lcd_wr_char(row ,column, million);
		column+=1;
		flag = 1;
	}
	
	if(digits == 4 || flag == 1)
 446:	04 30       	cpi	r16, 0x04	; 4
 448:	11 05       	cpc	r17, r1
 44a:	11 f0       	breq	.+4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44c:	81 30       	cpi	r24, 0x01	; 1
	{
		temp = val/1000;
 44e:	59 f5       	brne	.+86     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 450:	c7 01       	movw	r24, r14
 452:	68 ee       	ldi	r22, 0xE8	; 232
 454:	73 e0       	ldi	r23, 0x03	; 3
 456:	3b d5       	rcall	.+2678   	; 0xece <__divmodhi4>
 458:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <temp+0x1>
 45c:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <temp>
		thousand = temp%10 + 48;
 460:	9b 01       	movw	r18, r22
 462:	ad ec       	ldi	r26, 0xCD	; 205
 464:	bc ec       	ldi	r27, 0xCC	; 204
 466:	46 d5       	rcall	.+2700   	; 0xef4 <__umulhisi3>
 468:	96 95       	lsr	r25
 46a:	87 95       	ror	r24
 46c:	96 95       	lsr	r25
 46e:	87 95       	ror	r24
 470:	96 95       	lsr	r25
 472:	87 95       	ror	r24
 474:	ac 01       	movw	r20, r24
 476:	44 0f       	add	r20, r20
 478:	55 1f       	adc	r21, r21
 47a:	88 0f       	add	r24, r24
 47c:	99 1f       	adc	r25, r25
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	84 0f       	add	r24, r20
 488:	95 1f       	adc	r25, r21
 48a:	28 1b       	sub	r18, r24
 48c:	39 0b       	sbc	r19, r25
 48e:	a9 01       	movw	r20, r18
 490:	40 5d       	subi	r20, 0xD0	; 208
 492:	5f 4f       	sbci	r21, 0xFF	; 255
 494:	50 93 3f 02 	sts	0x023F, r21	; 0x80023f <thousand+0x1>
 498:	40 93 3e 02 	sts	0x023E, r20	; 0x80023e <thousand>
		lcd_wr_char(row, column, thousand);
 49c:	6c 2f       	mov	r22, r28
 49e:	8d 2f       	mov	r24, r29
 4a0:	50 df       	rcall	.-352    	; 0x342 <lcd_wr_char>
		column+=1;
 4a2:	cf 5f       	subi	r28, 0xFF	; 255
		flag = 1;
	}
	
	if(digits == 3 || flag == 1)
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	03 30       	cpi	r16, 0x03	; 3
 4a8:	11 05       	cpc	r17, r1
 4aa:	11 f0       	breq	.+4      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ac:	81 30       	cpi	r24, 0x01	; 1
	{
		temp = val/100;
 4ae:	59 f5       	brne	.+86     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4b0:	c7 01       	movw	r24, r14
 4b2:	64 e6       	ldi	r22, 0x64	; 100
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	0b d5       	rcall	.+2582   	; 0xece <__divmodhi4>
 4b8:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <temp+0x1>
 4bc:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <temp>
		hundred = temp%10 + 48;
 4c0:	9b 01       	movw	r18, r22
 4c2:	ad ec       	ldi	r26, 0xCD	; 205
 4c4:	bc ec       	ldi	r27, 0xCC	; 204
 4c6:	16 d5       	rcall	.+2604   	; 0xef4 <__umulhisi3>
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	96 95       	lsr	r25
 4ce:	87 95       	ror	r24
 4d0:	96 95       	lsr	r25
 4d2:	87 95       	ror	r24
 4d4:	ac 01       	movw	r20, r24
 4d6:	44 0f       	add	r20, r20
 4d8:	55 1f       	adc	r21, r21
 4da:	88 0f       	add	r24, r24
 4dc:	99 1f       	adc	r25, r25
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	84 0f       	add	r24, r20
 4e8:	95 1f       	adc	r25, r21
 4ea:	28 1b       	sub	r18, r24
 4ec:	39 0b       	sbc	r19, r25
 4ee:	a9 01       	movw	r20, r18
 4f0:	40 5d       	subi	r20, 0xD0	; 208
 4f2:	5f 4f       	sbci	r21, 0xFF	; 255
 4f4:	50 93 3b 02 	sts	0x023B, r21	; 0x80023b <hundred+0x1>
 4f8:	40 93 3a 02 	sts	0x023A, r20	; 0x80023a <hundred>
		lcd_wr_char(row, column, hundred);
 4fc:	6c 2f       	mov	r22, r28
 4fe:	8d 2f       	mov	r24, r29
		column+=1;
 500:	20 df       	rcall	.-448    	; 0x342 <lcd_wr_char>
		flag = 1;
 502:	cf 5f       	subi	r28, 0xFF	; 255
	}
	
	if(digits == 2 || flag == 1)
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	02 30       	cpi	r16, 0x02	; 2
 508:	11 05       	cpc	r17, r1
 50a:	11 f0       	breq	.+4      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
	{
		temp = val/10;
 50c:	81 30       	cpi	r24, 0x01	; 1
 50e:	59 f5       	brne	.+86     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 510:	c7 01       	movw	r24, r14
 512:	6a e0       	ldi	r22, 0x0A	; 10
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	db d4       	rcall	.+2486   	; 0xece <__divmodhi4>
 518:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <temp+0x1>
 51c:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <temp>
		tens = temp%10 + 48;
 520:	9b 01       	movw	r18, r22
 522:	ad ec       	ldi	r26, 0xCD	; 205
 524:	bc ec       	ldi	r27, 0xCC	; 204
 526:	e6 d4       	rcall	.+2508   	; 0xef4 <__umulhisi3>
 528:	96 95       	lsr	r25
 52a:	87 95       	ror	r24
 52c:	96 95       	lsr	r25
 52e:	87 95       	ror	r24
 530:	96 95       	lsr	r25
 532:	87 95       	ror	r24
 534:	ac 01       	movw	r20, r24
 536:	44 0f       	add	r20, r20
 538:	55 1f       	adc	r21, r21
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	88 0f       	add	r24, r24
 540:	99 1f       	adc	r25, r25
 542:	88 0f       	add	r24, r24
 544:	99 1f       	adc	r25, r25
 546:	84 0f       	add	r24, r20
 548:	95 1f       	adc	r25, r21
 54a:	28 1b       	sub	r18, r24
 54c:	39 0b       	sbc	r19, r25
 54e:	a9 01       	movw	r20, r18
 550:	40 5d       	subi	r20, 0xD0	; 208
 552:	5f 4f       	sbci	r21, 0xFF	; 255
 554:	50 93 39 02 	sts	0x0239, r21	; 0x800239 <tens+0x1>
 558:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <tens>
		lcd_wr_char(row, column, tens);
 55c:	6c 2f       	mov	r22, r28
 55e:	8d 2f       	mov	r24, r29
 560:	f0 de       	rcall	.-544    	; 0x342 <lcd_wr_char>
		column+=1;
 562:	cf 5f       	subi	r28, 0xFF	; 255
		flag = 1;
 564:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	if(digits == 1 || flag == 1)
 566:	01 30       	cpi	r16, 0x01	; 1
 568:	11 05       	cpc	r17, r1
 56a:	11 f0       	breq	.+4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56c:	81 30       	cpi	r24, 0x01	; 1
	{
		unit = val%10 + 48;
 56e:	79 f4       	brne	.+30     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 570:	c7 01       	movw	r24, r14
 572:	6a e0       	ldi	r22, 0x0A	; 10
 574:	70 e0       	ldi	r23, 0x00	; 0
 576:	ab d4       	rcall	.+2390   	; 0xece <__divmodhi4>
 578:	ac 01       	movw	r20, r24
 57a:	40 5d       	subi	r20, 0xD0	; 208
 57c:	5f 4f       	sbci	r21, 0xFF	; 255
 57e:	40 93 3c 02 	sts	0x023C, r20	; 0x80023c <unit>
 582:	50 93 3d 02 	sts	0x023D, r21	; 0x80023d <unit+0x1>
		lcd_wr_char(row, column, unit);
 586:	6c 2f       	mov	r22, r28
 588:	8d 2f       	mov	r24, r29
 58a:	db de       	rcall	.-586    	; 0x342 <lcd_wr_char>
		column+=1;
 58c:	cf 5f       	subi	r28, 0xFF	; 255
	}
	
	if(digits > 5)
 58e:	06 30       	cpi	r16, 0x06	; 6
 590:	11 05       	cpc	r17, r1
 592:	24 f0       	brlt	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
	{
		lcd_wr_char(row, column, 'E');
 594:	45 e4       	ldi	r20, 0x45	; 69
 596:	6c 2f       	mov	r22, r28
 598:	8d 2f       	mov	r24, r29
 59a:	d3 de       	rcall	.-602    	; 0x342 <lcd_wr_char>
 59c:	df 91       	pop	r29
		column+=1;
	}
}
 59e:	cf 91       	pop	r28
 5a0:	1f 91       	pop	r17
 5a2:	0f 91       	pop	r16
 5a4:	ff 90       	pop	r15
 5a6:	ef 90       	pop	r14
 5a8:	08 95       	ret

000005aa <ADC_Conversion>:
 5aa:	88 30       	cpi	r24, 0x08	; 8
	lcdPrint(1,4,5);
	PORTA &= 0x00;
}
void moveBackward(){
	lcdPrint(1,4,2);
	PORTA |= 0x09;
 5ac:	18 f0       	brcs	.+6      	; 0x5b4 <ADC_Conversion+0xa>
 5ae:	98 e0       	ldi	r25, 0x08	; 8
 5b0:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 5b4:	87 70       	andi	r24, 0x07	; 7
 5b6:	80 62       	ori	r24, 0x20	; 32
 5b8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 5bc:	ea e7       	ldi	r30, 0x7A	; 122
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	80 64       	ori	r24, 0x40	; 64
 5c4:	80 83       	st	Z, r24
 5c6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 5ca:	84 ff       	sbrs	r24, 4
 5cc:	fc cf       	rjmp	.-8      	; 0x5c6 <ADC_Conversion+0x1c>
 5ce:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 5d2:	ea e7       	ldi	r30, 0x7A	; 122
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	90 81       	ld	r25, Z
 5d8:	90 61       	ori	r25, 0x10	; 16
 5da:	90 83       	st	Z, r25
 5dc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 5e0:	08 95       	ret

000005e2 <Sharp_GP2D12_estimation>:
 5e2:	68 2f       	mov	r22, r24
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	b6 d1       	rcall	.+876    	; 0x958 <__floatunsisf>
 5ec:	2f ee       	ldi	r18, 0xEF	; 239
 5ee:	39 ec       	ldi	r19, 0xC9	; 201
 5f0:	43 e9       	ldi	r20, 0x93	; 147
 5f2:	5f e3       	ldi	r21, 0x3F	; 63
 5f4:	a2 d2       	rcall	.+1348   	; 0xb3a <pow>
 5f6:	9b 01       	movw	r18, r22
 5f8:	ac 01       	movw	r20, r24
 5fa:	60 e0       	ldi	r22, 0x00	; 0
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	80 e8       	ldi	r24, 0x80	; 128
 600:	9f e3       	ldi	r25, 0x3F	; 63
 602:	11 d1       	rcall	.+546    	; 0x826 <__divsf3>
 604:	2a e9       	ldi	r18, 0x9A	; 154
 606:	39 ef       	ldi	r19, 0xF9	; 249
 608:	4e e2       	ldi	r20, 0x2E	; 46
 60a:	55 e4       	ldi	r21, 0x45	; 69
 60c:	33 d2       	rcall	.+1126   	; 0xa74 <__mulsf3>
 60e:	20 e0       	ldi	r18, 0x00	; 0
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	40 e2       	ldi	r20, 0x20	; 32
 614:	51 e4       	ldi	r21, 0x41	; 65
 616:	2e d2       	rcall	.+1116   	; 0xa74 <__mulsf3>
 618:	6e d1       	rcall	.+732    	; 0x8f6 <__fixsfsi>
 61a:	cb 01       	movw	r24, r22
 61c:	61 32       	cpi	r22, 0x21	; 33
 61e:	73 40       	sbci	r23, 0x03	; 3
 620:	10 f0       	brcs	.+4      	; 0x626 <Sharp_GP2D12_estimation+0x44>
 622:	80 e2       	ldi	r24, 0x20	; 32
 624:	93 e0       	ldi	r25, 0x03	; 3
 626:	08 95       	ret

00000628 <measureDis>:
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	8b e0       	ldi	r24, 0x0B	; 11
 62e:	bd df       	rcall	.-134    	; 0x5aa <ADC_Conversion>
 630:	d8 df       	rcall	.-80     	; 0x5e2 <Sharp_GP2D12_estimation>
 632:	ec 01       	movw	r28, r24
 634:	23 e0       	ldi	r18, 0x03	; 3
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	ac 01       	movw	r20, r24
 63a:	65 e0       	ldi	r22, 0x05	; 5
 63c:	82 e0       	ldi	r24, 0x02	; 2
 63e:	cf de       	rcall	.-610    	; 0x3de <lcd_numeric_value>
 640:	ce 01       	movw	r24, r28
 642:	df 91       	pop	r29
 644:	cf 91       	pop	r28
 646:	08 95       	ret

00000648 <adc_init>:
 648:	ea e7       	ldi	r30, 0x7A	; 122
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	10 82       	st	Z, r1
 64e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
 652:	80 e2       	ldi	r24, 0x20	; 32
 654:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
 658:	80 e8       	ldi	r24, 0x80	; 128
 65a:	80 bf       	out	0x30, r24	; 48
 65c:	86 e8       	ldi	r24, 0x86	; 134
 65e:	80 83       	st	Z, r24
 660:	08 95       	ret

00000662 <lcdPrint>:
 662:	df 92       	push	r13
 664:	ef 92       	push	r14
 666:	ff 92       	push	r15
 668:	0f 93       	push	r16
 66a:	1f 93       	push	r17
 66c:	cf 93       	push	r28
 66e:	df 93       	push	r29
 670:	cd b7       	in	r28, 0x3d	; 61
 672:	de b7       	in	r29, 0x3e	; 62
 674:	e2 97       	sbiw	r28, 0x32	; 50
 676:	0f b6       	in	r0, 0x3f	; 63
 678:	f8 94       	cli
 67a:	de bf       	out	0x3e, r29	; 62
 67c:	0f be       	out	0x3f, r0	; 63
 67e:	cd bf       	out	0x3d, r28	; 61
 680:	d8 2e       	mov	r13, r24
 682:	7b 01       	movw	r14, r22
 684:	89 e0       	ldi	r24, 0x09	; 9
 686:	e0 e0       	ldi	r30, 0x00	; 0
 688:	f2 e0       	ldi	r31, 0x02	; 2
 68a:	de 01       	movw	r26, r28
 68c:	11 96       	adiw	r26, 0x01	; 1
 68e:	01 90       	ld	r0, Z+
 690:	0d 92       	st	X+, r0
 692:	8a 95       	dec	r24
 694:	e1 f7       	brne	.-8      	; 0x68e <lcdPrint+0x2c>
 696:	1a 86       	std	Y+10, r1	; 0x0a
 698:	8a e0       	ldi	r24, 0x0A	; 10
 69a:	ea e2       	ldi	r30, 0x2A	; 42
 69c:	f2 e0       	ldi	r31, 0x02	; 2
 69e:	de 01       	movw	r26, r28
 6a0:	1b 96       	adiw	r26, 0x0b	; 11
 6a2:	01 90       	ld	r0, Z+
 6a4:	0d 92       	st	X+, r0
 6a6:	8a 95       	dec	r24
 6a8:	e1 f7       	brne	.-8      	; 0x6a2 <lcdPrint+0x40>
 6aa:	86 e0       	ldi	r24, 0x06	; 6
 6ac:	ea e0       	ldi	r30, 0x0A	; 10
 6ae:	f2 e0       	ldi	r31, 0x02	; 2
 6b0:	de 01       	movw	r26, r28
 6b2:	55 96       	adiw	r26, 0x15	; 21
 6b4:	01 90       	ld	r0, Z+
 6b6:	0d 92       	st	X+, r0
 6b8:	8a 95       	dec	r24
 6ba:	e1 f7       	brne	.-8      	; 0x6b4 <lcdPrint+0x52>
 6bc:	84 e0       	ldi	r24, 0x04	; 4
 6be:	fe 01       	movw	r30, r28
 6c0:	7b 96       	adiw	r30, 0x1b	; 27
 6c2:	df 01       	movw	r26, r30
 6c4:	98 2f       	mov	r25, r24
 6c6:	1d 92       	st	X+, r1
 6c8:	9a 95       	dec	r25
 6ca:	e9 f7       	brne	.-6      	; 0x6c6 <lcdPrint+0x64>
 6cc:	97 e0       	ldi	r25, 0x07	; 7
 6ce:	e4 e1       	ldi	r30, 0x14	; 20
 6d0:	f2 e0       	ldi	r31, 0x02	; 2
 6d2:	de 01       	movw	r26, r28
 6d4:	5f 96       	adiw	r26, 0x1f	; 31
 6d6:	01 90       	ld	r0, Z+
 6d8:	0d 92       	st	X+, r0
 6da:	9a 95       	dec	r25
 6dc:	e1 f7       	brne	.-8      	; 0x6d6 <lcdPrint+0x74>
 6de:	fe 01       	movw	r30, r28
 6e0:	b6 96       	adiw	r30, 0x26	; 38
 6e2:	93 e0       	ldi	r25, 0x03	; 3
 6e4:	df 01       	movw	r26, r30
 6e6:	1d 92       	st	X+, r1
 6e8:	9a 95       	dec	r25
 6ea:	e9 f7       	brne	.-6      	; 0x6e6 <lcdPrint+0x84>
 6ec:	96 e0       	ldi	r25, 0x06	; 6
 6ee:	ee e1       	ldi	r30, 0x1E	; 30
 6f0:	f2 e0       	ldi	r31, 0x02	; 2
 6f2:	de 01       	movw	r26, r28
 6f4:	99 96       	adiw	r26, 0x29	; 41
 6f6:	01 90       	ld	r0, Z+
 6f8:	0d 92       	st	X+, r0
 6fa:	9a 95       	dec	r25
 6fc:	e1 f7       	brne	.-8      	; 0x6f6 <lcdPrint+0x94>
 6fe:	fe 01       	movw	r30, r28
 700:	bf 96       	adiw	r30, 0x2f	; 47
 702:	df 01       	movw	r26, r30
 704:	1d 92       	st	X+, r1
 706:	8a 95       	dec	r24
 708:	e9 f7       	brne	.-6      	; 0x704 <lcdPrint+0xa2>
 70a:	42 30       	cpi	r20, 0x02	; 2
 70c:	51 05       	cpc	r21, r1
 70e:	a1 f0       	breq	.+40     	; 0x738 <lcdPrint+0xd6>
 710:	24 f4       	brge	.+8      	; 0x71a <lcdPrint+0xb8>
 712:	41 30       	cpi	r20, 0x01	; 1
 714:	51 05       	cpc	r21, r1
 716:	41 f0       	breq	.+16     	; 0x728 <lcdPrint+0xc6>
 718:	17 c0       	rjmp	.+46     	; 0x748 <lcdPrint+0xe6>
 71a:	43 30       	cpi	r20, 0x03	; 3
 71c:	51 05       	cpc	r21, r1
 71e:	41 f0       	breq	.+16     	; 0x730 <lcdPrint+0xce>
 720:	44 30       	cpi	r20, 0x04	; 4
 722:	51 05       	cpc	r21, r1
 724:	69 f0       	breq	.+26     	; 0x740 <lcdPrint+0xde>
 726:	10 c0       	rjmp	.+32     	; 0x748 <lcdPrint+0xe6>
 728:	8e 01       	movw	r16, r28
 72a:	0f 5f       	subi	r16, 0xFF	; 255
 72c:	1f 4f       	sbci	r17, 0xFF	; 255
 72e:	18 c0       	rjmp	.+48     	; 0x760 <lcdPrint+0xfe>
 730:	8e 01       	movw	r16, r28
 732:	0b 5e       	subi	r16, 0xEB	; 235
 734:	1f 4f       	sbci	r17, 0xFF	; 255
 736:	14 c0       	rjmp	.+40     	; 0x760 <lcdPrint+0xfe>
 738:	8e 01       	movw	r16, r28
 73a:	05 5f       	subi	r16, 0xF5	; 245
 73c:	1f 4f       	sbci	r17, 0xFF	; 255
 73e:	10 c0       	rjmp	.+32     	; 0x760 <lcdPrint+0xfe>
 740:	8e 01       	movw	r16, r28
 742:	01 5e       	subi	r16, 0xE1	; 225
 744:	1f 4f       	sbci	r17, 0xFF	; 255
 746:	0c c0       	rjmp	.+24     	; 0x760 <lcdPrint+0xfe>
 748:	8e 01       	movw	r16, r28
 74a:	07 5d       	subi	r16, 0xD7	; 215
 74c:	1f 4f       	sbci	r17, 0xFF	; 255
 74e:	08 c0       	rjmp	.+16     	; 0x760 <lcdPrint+0xfe>
 750:	6e 2d       	mov	r22, r14
 752:	8d 2d       	mov	r24, r13
 754:	f6 dd       	rcall	.-1044   	; 0x342 <lcd_wr_char>
 756:	bf ef       	ldi	r27, 0xFF	; 255
 758:	eb 1a       	sub	r14, r27
 75a:	fb 0a       	sbc	r15, r27
 75c:	0f 5f       	subi	r16, 0xFF	; 255
 75e:	1f 4f       	sbci	r17, 0xFF	; 255
 760:	f8 01       	movw	r30, r16
 762:	40 81       	ld	r20, Z
 764:	40 32       	cpi	r20, 0x20	; 32
 766:	a1 f7       	brne	.-24     	; 0x750 <lcdPrint+0xee>
 768:	e2 96       	adiw	r28, 0x32	; 50
 76a:	0f b6       	in	r0, 0x3f	; 63
 76c:	f8 94       	cli
 76e:	de bf       	out	0x3e, r29	; 62
 770:	0f be       	out	0x3f, r0	; 63
 772:	cd bf       	out	0x3d, r28	; 61
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
 778:	1f 91       	pop	r17
 77a:	0f 91       	pop	r16
 77c:	ff 90       	pop	r15
 77e:	ef 90       	pop	r14
 780:	df 90       	pop	r13
 782:	08 95       	ret

00000784 <moveForward>:
 784:	41 e0       	ldi	r20, 0x01	; 1
 786:	50 e0       	ldi	r21, 0x00	; 0
 788:	64 e0       	ldi	r22, 0x04	; 4
 78a:	70 e0       	ldi	r23, 0x00	; 0
 78c:	81 e0       	ldi	r24, 0x01	; 1
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	68 df       	rcall	.-304    	; 0x662 <lcdPrint>
 792:	82 b1       	in	r24, 0x02	; 2
 794:	86 60       	ori	r24, 0x06	; 6
 796:	82 b9       	out	0x02, r24	; 2
 798:	08 95       	ret

0000079a <moveLeft>:
}
void moveLeft(){
	lcdPrint(1,4,3);
 79a:	43 e0       	ldi	r20, 0x03	; 3
 79c:	50 e0       	ldi	r21, 0x00	; 0
 79e:	64 e0       	ldi	r22, 0x04	; 4
 7a0:	70 e0       	ldi	r23, 0x00	; 0
 7a2:	81 e0       	ldi	r24, 0x01	; 1
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	5d df       	rcall	.-326    	; 0x662 <lcdPrint>
	PORTA |= 0x05;
 7a8:	82 b1       	in	r24, 0x02	; 2
 7aa:	85 60       	ori	r24, 0x05	; 5
 7ac:	82 b9       	out	0x02, r24	; 2
 7ae:	08 95       	ret

000007b0 <main>:
unsigned int Sharp_GP2D12_estimation(unsigned char adc_reading);
void adc_init();

int main(void)
{
	DDRJ=0xFF;						//Define all led's as output
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
	PORTJ=0x00;						//Define all led's as low in the beginning
 7b6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x7c0105>
	DDRC=0x08;						//Define 3rd pin of port C as output
 7ba:	88 e0       	ldi	r24, 0x08	; 8
 7bc:	87 b9       	out	0x07, r24	; 7
	PORTC=0x00;						//Define all pins as low in the beginning of port C
 7be:	18 b8       	out	0x08, r1	; 8
	DDRA |= 0x0F;					//Define Motor Pins as Output
 7c0:	81 b1       	in	r24, 0x01	; 1
 7c2:	8f 60       	ori	r24, 0x0F	; 15
 7c4:	81 b9       	out	0x01, r24	; 1
	PORTA &= 0xF0;					//Define Motor Pins as LOW
 7c6:	82 b1       	in	r24, 0x02	; 2
 7c8:	80 7f       	andi	r24, 0xF0	; 240
 7ca:	82 b9       	out	0x02, r24	; 2
	DDRL = DDRL | 0x18;				//Setting PL3 and PL4 pins as output for PWM generation
 7cc:	ea e0       	ldi	r30, 0x0A	; 10
 7ce:	f1 e0       	ldi	r31, 0x01	; 1
 7d0:	80 81       	ld	r24, Z
 7d2:	88 61       	ori	r24, 0x18	; 24
 7d4:	80 83       	st	Z, r24
	PORTL = PORTL | 0x18;			//PL3 and PL4 pins are for velocity control using PWM
 7d6:	eb e0       	ldi	r30, 0x0B	; 11
 7d8:	f1 e0       	ldi	r31, 0x01	; 1
 7da:	80 81       	ld	r24, Z
 7dc:	88 61       	ori	r24, 0x18	; 24
 7de:	80 83       	st	Z, r24
	////////////////////////////////////////ADC Config Begin///////////////////////////////////////////
	DDRF	= 0x00;		// All Port F pins have to be set as input
 7e0:	10 ba       	out	0x10, r1	; 16
	PORTF	= 0x00;		// Write suitable value in the PORT F register to make initial values to be "0"
 7e2:	11 ba       	out	0x11, r1	; 17
	DDRK	= 0x00;	// All Port K pins have to be set as input
 7e4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
	PORTK	= 0x00;	// Write suitable value in the PORT K register to make initial values to be "0"
 7e8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
	////////////////////////////////////////ADC Config End/////////////////////////////////////////////
	int ledGraph=0x01;
	int one=0;
	int wordCounter=1;
	lcd_port_config();
 7ec:	dc dc       	rcall	.-1608   	; 0x1a6 <lcd_port_config>
	lcd_init();
 7ee:	7a dd       	rcall	.-1292   	; 0x2e4 <lcd_init>
	adc_init();
 7f0:	2b df       	rcall	.-426    	; 0x648 <adc_init>
 7f2:	89 dd       	rcall	.-1262   	; 0x306 <lcd_home>
	lcd_home();
 7f4:	c1 e0       	ldi	r28, 0x01	; 1
 7f6:	d0 e0       	ldi	r29, 0x00	; 0
	DDRF	= 0x00;		// All Port F pins have to be set as input
	PORTF	= 0x00;		// Write suitable value in the PORT F register to make initial values to be "0"
	DDRK	= 0x00;	// All Port K pins have to be set as input
	PORTK	= 0x00;	// Write suitable value in the PORT K register to make initial values to be "0"
	////////////////////////////////////////ADC Config End/////////////////////////////////////////////
	int ledGraph=0x01;
 7f8:	10 c0       	rjmp	.+32     	; 0x81a <main+0x6a>
 7fa:	e5 e0       	ldi	r30, 0x05	; 5
 7fc:	f1 e0       	ldi	r31, 0x01	; 1
	lcd_home();
	
	while(1){
		while (ledGraph!=(0xFF))
		{
			PORTJ |= ledGraph;
 7fe:	80 81       	ld	r24, Z
 800:	8c 2b       	or	r24, r28
 802:	80 83       	st	Z, r24
 804:	cc 0f       	add	r28, r28
			one++;
//			for(int i=0;i<one;i++){
//				buzzerBeep();
//				_delay_ms(2000);
//			}
			ledGraph = ledGraph << 1;
 806:	dd 1f       	adc	r29, r29
 808:	c1 60       	ori	r28, 0x01	; 1
			ledGraph |= 0x01;
 80a:	0e df       	rcall	.-484    	; 0x628 <measureDis>
			int dis=measureDis();
 80c:	80 55       	subi	r24, 0x50	; 80
			if(dis>=80 && dis<=130){
 80e:	91 09       	sbc	r25, r1
 810:	c3 97       	sbiw	r24, 0x33	; 51
 812:	10 f4       	brcc	.+4      	; 0x818 <main+0x68>
				moveLeft();
 814:	c2 df       	rcall	.-124    	; 0x79a <moveLeft>
 816:	01 c0       	rjmp	.+2      	; 0x81a <main+0x6a>
 818:	b5 df       	rcall	.-150    	; 0x784 <moveForward>
			}else{
				moveForward();
 81a:	cf 3f       	cpi	r28, 0xFF	; 255
 81c:	d1 05       	cpc	r29, r1
	lcd_init();
	adc_init();
	lcd_home();
	
	while(1){
		while (ledGraph!=(0xFF))
 81e:	69 f7       	brne	.-38     	; 0x7fa <main+0x4a>
 820:	c1 e0       	ldi	r28, 0x01	; 1
 822:	d0 e0       	ldi	r29, 0x00	; 0
			}else{
				moveForward();
			}
			wordCounter++;
		}
		ledGraph=0x01;
 824:	fa cf       	rjmp	.-12     	; 0x81a <main+0x6a>

00000826 <__divsf3>:
 826:	0c d0       	rcall	.+24     	; 0x840 <__divsf3x>
 828:	eb c0       	rjmp	.+470    	; 0xa00 <__fp_round>
 82a:	e3 d0       	rcall	.+454    	; 0x9f2 <__fp_pscB>
 82c:	40 f0       	brcs	.+16     	; 0x83e <__divsf3+0x18>
 82e:	da d0       	rcall	.+436    	; 0x9e4 <__fp_pscA>
 830:	30 f0       	brcs	.+12     	; 0x83e <__divsf3+0x18>
 832:	21 f4       	brne	.+8      	; 0x83c <__divsf3+0x16>
 834:	5f 3f       	cpi	r21, 0xFF	; 255
 836:	19 f0       	breq	.+6      	; 0x83e <__divsf3+0x18>
 838:	cc c0       	rjmp	.+408    	; 0x9d2 <__fp_inf>
 83a:	51 11       	cpse	r21, r1
 83c:	15 c1       	rjmp	.+554    	; 0xa68 <__fp_szero>
 83e:	cf c0       	rjmp	.+414    	; 0x9de <__fp_nan>

00000840 <__divsf3x>:
 840:	f0 d0       	rcall	.+480    	; 0xa22 <__fp_split3>
 842:	98 f3       	brcs	.-26     	; 0x82a <__divsf3+0x4>

00000844 <__divsf3_pse>:
 844:	99 23       	and	r25, r25
 846:	c9 f3       	breq	.-14     	; 0x83a <__divsf3+0x14>
 848:	55 23       	and	r21, r21
 84a:	b1 f3       	breq	.-20     	; 0x838 <__divsf3+0x12>
 84c:	95 1b       	sub	r25, r21
 84e:	55 0b       	sbc	r21, r21
 850:	bb 27       	eor	r27, r27
 852:	aa 27       	eor	r26, r26
 854:	62 17       	cp	r22, r18
 856:	73 07       	cpc	r23, r19
 858:	84 07       	cpc	r24, r20
 85a:	38 f0       	brcs	.+14     	; 0x86a <__divsf3_pse+0x26>
 85c:	9f 5f       	subi	r25, 0xFF	; 255
 85e:	5f 4f       	sbci	r21, 0xFF	; 255
 860:	22 0f       	add	r18, r18
 862:	33 1f       	adc	r19, r19
 864:	44 1f       	adc	r20, r20
 866:	aa 1f       	adc	r26, r26
 868:	a9 f3       	breq	.-22     	; 0x854 <__divsf3_pse+0x10>
 86a:	33 d0       	rcall	.+102    	; 0x8d2 <__divsf3_pse+0x8e>
 86c:	0e 2e       	mov	r0, r30
 86e:	3a f0       	brmi	.+14     	; 0x87e <__divsf3_pse+0x3a>
 870:	e0 e8       	ldi	r30, 0x80	; 128
 872:	30 d0       	rcall	.+96     	; 0x8d4 <__divsf3_pse+0x90>
 874:	91 50       	subi	r25, 0x01	; 1
 876:	50 40       	sbci	r21, 0x00	; 0
 878:	e6 95       	lsr	r30
 87a:	00 1c       	adc	r0, r0
 87c:	ca f7       	brpl	.-14     	; 0x870 <__divsf3_pse+0x2c>
 87e:	29 d0       	rcall	.+82     	; 0x8d2 <__divsf3_pse+0x8e>
 880:	fe 2f       	mov	r31, r30
 882:	27 d0       	rcall	.+78     	; 0x8d2 <__divsf3_pse+0x8e>
 884:	66 0f       	add	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	bb 1f       	adc	r27, r27
 88c:	26 17       	cp	r18, r22
 88e:	37 07       	cpc	r19, r23
 890:	48 07       	cpc	r20, r24
 892:	ab 07       	cpc	r26, r27
 894:	b0 e8       	ldi	r27, 0x80	; 128
 896:	09 f0       	breq	.+2      	; 0x89a <__divsf3_pse+0x56>
 898:	bb 0b       	sbc	r27, r27
 89a:	80 2d       	mov	r24, r0
 89c:	bf 01       	movw	r22, r30
 89e:	ff 27       	eor	r31, r31
 8a0:	93 58       	subi	r25, 0x83	; 131
 8a2:	5f 4f       	sbci	r21, 0xFF	; 255
 8a4:	2a f0       	brmi	.+10     	; 0x8b0 <__divsf3_pse+0x6c>
 8a6:	9e 3f       	cpi	r25, 0xFE	; 254
 8a8:	51 05       	cpc	r21, r1
 8aa:	68 f0       	brcs	.+26     	; 0x8c6 <__divsf3_pse+0x82>
 8ac:	92 c0       	rjmp	.+292    	; 0x9d2 <__fp_inf>
 8ae:	dc c0       	rjmp	.+440    	; 0xa68 <__fp_szero>
 8b0:	5f 3f       	cpi	r21, 0xFF	; 255
 8b2:	ec f3       	brlt	.-6      	; 0x8ae <__divsf3_pse+0x6a>
 8b4:	98 3e       	cpi	r25, 0xE8	; 232
 8b6:	dc f3       	brlt	.-10     	; 0x8ae <__divsf3_pse+0x6a>
 8b8:	86 95       	lsr	r24
 8ba:	77 95       	ror	r23
 8bc:	67 95       	ror	r22
 8be:	b7 95       	ror	r27
 8c0:	f7 95       	ror	r31
 8c2:	9f 5f       	subi	r25, 0xFF	; 255
 8c4:	c9 f7       	brne	.-14     	; 0x8b8 <__divsf3_pse+0x74>
 8c6:	88 0f       	add	r24, r24
 8c8:	91 1d       	adc	r25, r1
 8ca:	96 95       	lsr	r25
 8cc:	87 95       	ror	r24
 8ce:	97 f9       	bld	r25, 7
 8d0:	08 95       	ret
 8d2:	e1 e0       	ldi	r30, 0x01	; 1
 8d4:	66 0f       	add	r22, r22
 8d6:	77 1f       	adc	r23, r23
 8d8:	88 1f       	adc	r24, r24
 8da:	bb 1f       	adc	r27, r27
 8dc:	62 17       	cp	r22, r18
 8de:	73 07       	cpc	r23, r19
 8e0:	84 07       	cpc	r24, r20
 8e2:	ba 07       	cpc	r27, r26
 8e4:	20 f0       	brcs	.+8      	; 0x8ee <__divsf3_pse+0xaa>
 8e6:	62 1b       	sub	r22, r18
 8e8:	73 0b       	sbc	r23, r19
 8ea:	84 0b       	sbc	r24, r20
 8ec:	ba 0b       	sbc	r27, r26
 8ee:	ee 1f       	adc	r30, r30
 8f0:	88 f7       	brcc	.-30     	; 0x8d4 <__divsf3_pse+0x90>
 8f2:	e0 95       	com	r30
 8f4:	08 95       	ret

000008f6 <__fixsfsi>:
 8f6:	04 d0       	rcall	.+8      	; 0x900 <__fixunssfsi>
 8f8:	68 94       	set
 8fa:	b1 11       	cpse	r27, r1
 8fc:	b5 c0       	rjmp	.+362    	; 0xa68 <__fp_szero>
 8fe:	08 95       	ret

00000900 <__fixunssfsi>:
 900:	98 d0       	rcall	.+304    	; 0xa32 <__fp_splitA>
 902:	88 f0       	brcs	.+34     	; 0x926 <__fixunssfsi+0x26>
 904:	9f 57       	subi	r25, 0x7F	; 127
 906:	90 f0       	brcs	.+36     	; 0x92c <__fixunssfsi+0x2c>
 908:	b9 2f       	mov	r27, r25
 90a:	99 27       	eor	r25, r25
 90c:	b7 51       	subi	r27, 0x17	; 23
 90e:	a0 f0       	brcs	.+40     	; 0x938 <__fixunssfsi+0x38>
 910:	d1 f0       	breq	.+52     	; 0x946 <__fixunssfsi+0x46>
 912:	66 0f       	add	r22, r22
 914:	77 1f       	adc	r23, r23
 916:	88 1f       	adc	r24, r24
 918:	99 1f       	adc	r25, r25
 91a:	1a f0       	brmi	.+6      	; 0x922 <__fixunssfsi+0x22>
 91c:	ba 95       	dec	r27
 91e:	c9 f7       	brne	.-14     	; 0x912 <__fixunssfsi+0x12>
 920:	12 c0       	rjmp	.+36     	; 0x946 <__fixunssfsi+0x46>
 922:	b1 30       	cpi	r27, 0x01	; 1
 924:	81 f0       	breq	.+32     	; 0x946 <__fixunssfsi+0x46>
 926:	9f d0       	rcall	.+318    	; 0xa66 <__fp_zero>
 928:	b1 e0       	ldi	r27, 0x01	; 1
 92a:	08 95       	ret
 92c:	9c c0       	rjmp	.+312    	; 0xa66 <__fp_zero>
 92e:	67 2f       	mov	r22, r23
 930:	78 2f       	mov	r23, r24
 932:	88 27       	eor	r24, r24
 934:	b8 5f       	subi	r27, 0xF8	; 248
 936:	39 f0       	breq	.+14     	; 0x946 <__fixunssfsi+0x46>
 938:	b9 3f       	cpi	r27, 0xF9	; 249
 93a:	cc f3       	brlt	.-14     	; 0x92e <__fixunssfsi+0x2e>
 93c:	86 95       	lsr	r24
 93e:	77 95       	ror	r23
 940:	67 95       	ror	r22
 942:	b3 95       	inc	r27
 944:	d9 f7       	brne	.-10     	; 0x93c <__fixunssfsi+0x3c>
 946:	3e f4       	brtc	.+14     	; 0x956 <__fixunssfsi+0x56>
 948:	90 95       	com	r25
 94a:	80 95       	com	r24
 94c:	70 95       	com	r23
 94e:	61 95       	neg	r22
 950:	7f 4f       	sbci	r23, 0xFF	; 255
 952:	8f 4f       	sbci	r24, 0xFF	; 255
 954:	9f 4f       	sbci	r25, 0xFF	; 255
 956:	08 95       	ret

00000958 <__floatunsisf>:
 958:	e8 94       	clt
 95a:	09 c0       	rjmp	.+18     	; 0x96e <__floatsisf+0x12>

0000095c <__floatsisf>:
 95c:	97 fb       	bst	r25, 7
 95e:	3e f4       	brtc	.+14     	; 0x96e <__floatsisf+0x12>
 960:	90 95       	com	r25
 962:	80 95       	com	r24
 964:	70 95       	com	r23
 966:	61 95       	neg	r22
 968:	7f 4f       	sbci	r23, 0xFF	; 255
 96a:	8f 4f       	sbci	r24, 0xFF	; 255
 96c:	9f 4f       	sbci	r25, 0xFF	; 255
 96e:	99 23       	and	r25, r25
 970:	a9 f0       	breq	.+42     	; 0x99c <__floatsisf+0x40>
 972:	f9 2f       	mov	r31, r25
 974:	96 e9       	ldi	r25, 0x96	; 150
 976:	bb 27       	eor	r27, r27
 978:	93 95       	inc	r25
 97a:	f6 95       	lsr	r31
 97c:	87 95       	ror	r24
 97e:	77 95       	ror	r23
 980:	67 95       	ror	r22
 982:	b7 95       	ror	r27
 984:	f1 11       	cpse	r31, r1
 986:	f8 cf       	rjmp	.-16     	; 0x978 <__floatsisf+0x1c>
 988:	fa f4       	brpl	.+62     	; 0x9c8 <__floatsisf+0x6c>
 98a:	bb 0f       	add	r27, r27
 98c:	11 f4       	brne	.+4      	; 0x992 <__floatsisf+0x36>
 98e:	60 ff       	sbrs	r22, 0
 990:	1b c0       	rjmp	.+54     	; 0x9c8 <__floatsisf+0x6c>
 992:	6f 5f       	subi	r22, 0xFF	; 255
 994:	7f 4f       	sbci	r23, 0xFF	; 255
 996:	8f 4f       	sbci	r24, 0xFF	; 255
 998:	9f 4f       	sbci	r25, 0xFF	; 255
 99a:	16 c0       	rjmp	.+44     	; 0x9c8 <__floatsisf+0x6c>
 99c:	88 23       	and	r24, r24
 99e:	11 f0       	breq	.+4      	; 0x9a4 <__floatsisf+0x48>
 9a0:	96 e9       	ldi	r25, 0x96	; 150
 9a2:	11 c0       	rjmp	.+34     	; 0x9c6 <__floatsisf+0x6a>
 9a4:	77 23       	and	r23, r23
 9a6:	21 f0       	breq	.+8      	; 0x9b0 <__floatsisf+0x54>
 9a8:	9e e8       	ldi	r25, 0x8E	; 142
 9aa:	87 2f       	mov	r24, r23
 9ac:	76 2f       	mov	r23, r22
 9ae:	05 c0       	rjmp	.+10     	; 0x9ba <__floatsisf+0x5e>
 9b0:	66 23       	and	r22, r22
 9b2:	71 f0       	breq	.+28     	; 0x9d0 <__floatsisf+0x74>
 9b4:	96 e8       	ldi	r25, 0x86	; 134
 9b6:	86 2f       	mov	r24, r22
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	60 e0       	ldi	r22, 0x00	; 0
 9bc:	2a f0       	brmi	.+10     	; 0x9c8 <__floatsisf+0x6c>
 9be:	9a 95       	dec	r25
 9c0:	66 0f       	add	r22, r22
 9c2:	77 1f       	adc	r23, r23
 9c4:	88 1f       	adc	r24, r24
 9c6:	da f7       	brpl	.-10     	; 0x9be <__floatsisf+0x62>
 9c8:	88 0f       	add	r24, r24
 9ca:	96 95       	lsr	r25
 9cc:	87 95       	ror	r24
 9ce:	97 f9       	bld	r25, 7
 9d0:	08 95       	ret

000009d2 <__fp_inf>:
 9d2:	97 f9       	bld	r25, 7
 9d4:	9f 67       	ori	r25, 0x7F	; 127
 9d6:	80 e8       	ldi	r24, 0x80	; 128
 9d8:	70 e0       	ldi	r23, 0x00	; 0
 9da:	60 e0       	ldi	r22, 0x00	; 0
 9dc:	08 95       	ret

000009de <__fp_nan>:
 9de:	9f ef       	ldi	r25, 0xFF	; 255
 9e0:	80 ec       	ldi	r24, 0xC0	; 192
 9e2:	08 95       	ret

000009e4 <__fp_pscA>:
 9e4:	00 24       	eor	r0, r0
 9e6:	0a 94       	dec	r0
 9e8:	16 16       	cp	r1, r22
 9ea:	17 06       	cpc	r1, r23
 9ec:	18 06       	cpc	r1, r24
 9ee:	09 06       	cpc	r0, r25
 9f0:	08 95       	ret

000009f2 <__fp_pscB>:
 9f2:	00 24       	eor	r0, r0
 9f4:	0a 94       	dec	r0
 9f6:	12 16       	cp	r1, r18
 9f8:	13 06       	cpc	r1, r19
 9fa:	14 06       	cpc	r1, r20
 9fc:	05 06       	cpc	r0, r21
 9fe:	08 95       	ret

00000a00 <__fp_round>:
 a00:	09 2e       	mov	r0, r25
 a02:	03 94       	inc	r0
 a04:	00 0c       	add	r0, r0
 a06:	11 f4       	brne	.+4      	; 0xa0c <__fp_round+0xc>
 a08:	88 23       	and	r24, r24
 a0a:	52 f0       	brmi	.+20     	; 0xa20 <__fp_round+0x20>
 a0c:	bb 0f       	add	r27, r27
 a0e:	40 f4       	brcc	.+16     	; 0xa20 <__fp_round+0x20>
 a10:	bf 2b       	or	r27, r31
 a12:	11 f4       	brne	.+4      	; 0xa18 <__fp_round+0x18>
 a14:	60 ff       	sbrs	r22, 0
 a16:	04 c0       	rjmp	.+8      	; 0xa20 <__fp_round+0x20>
 a18:	6f 5f       	subi	r22, 0xFF	; 255
 a1a:	7f 4f       	sbci	r23, 0xFF	; 255
 a1c:	8f 4f       	sbci	r24, 0xFF	; 255
 a1e:	9f 4f       	sbci	r25, 0xFF	; 255
 a20:	08 95       	ret

00000a22 <__fp_split3>:
 a22:	57 fd       	sbrc	r21, 7
 a24:	90 58       	subi	r25, 0x80	; 128
 a26:	44 0f       	add	r20, r20
 a28:	55 1f       	adc	r21, r21
 a2a:	59 f0       	breq	.+22     	; 0xa42 <__fp_splitA+0x10>
 a2c:	5f 3f       	cpi	r21, 0xFF	; 255
 a2e:	71 f0       	breq	.+28     	; 0xa4c <__fp_splitA+0x1a>
 a30:	47 95       	ror	r20

00000a32 <__fp_splitA>:
 a32:	88 0f       	add	r24, r24
 a34:	97 fb       	bst	r25, 7
 a36:	99 1f       	adc	r25, r25
 a38:	61 f0       	breq	.+24     	; 0xa52 <__fp_splitA+0x20>
 a3a:	9f 3f       	cpi	r25, 0xFF	; 255
 a3c:	79 f0       	breq	.+30     	; 0xa5c <__fp_splitA+0x2a>
 a3e:	87 95       	ror	r24
 a40:	08 95       	ret
 a42:	12 16       	cp	r1, r18
 a44:	13 06       	cpc	r1, r19
 a46:	14 06       	cpc	r1, r20
 a48:	55 1f       	adc	r21, r21
 a4a:	f2 cf       	rjmp	.-28     	; 0xa30 <__fp_split3+0xe>
 a4c:	46 95       	lsr	r20
 a4e:	f1 df       	rcall	.-30     	; 0xa32 <__fp_splitA>
 a50:	08 c0       	rjmp	.+16     	; 0xa62 <__fp_splitA+0x30>
 a52:	16 16       	cp	r1, r22
 a54:	17 06       	cpc	r1, r23
 a56:	18 06       	cpc	r1, r24
 a58:	99 1f       	adc	r25, r25
 a5a:	f1 cf       	rjmp	.-30     	; 0xa3e <__fp_splitA+0xc>
 a5c:	86 95       	lsr	r24
 a5e:	71 05       	cpc	r23, r1
 a60:	61 05       	cpc	r22, r1
 a62:	08 94       	sec
 a64:	08 95       	ret

00000a66 <__fp_zero>:
 a66:	e8 94       	clt

00000a68 <__fp_szero>:
 a68:	bb 27       	eor	r27, r27
 a6a:	66 27       	eor	r22, r22
 a6c:	77 27       	eor	r23, r23
 a6e:	cb 01       	movw	r24, r22
 a70:	97 f9       	bld	r25, 7
 a72:	08 95       	ret

00000a74 <__mulsf3>:
 a74:	0b d0       	rcall	.+22     	; 0xa8c <__mulsf3x>
 a76:	c4 cf       	rjmp	.-120    	; 0xa00 <__fp_round>
 a78:	b5 df       	rcall	.-150    	; 0x9e4 <__fp_pscA>
 a7a:	28 f0       	brcs	.+10     	; 0xa86 <__mulsf3+0x12>
 a7c:	ba df       	rcall	.-140    	; 0x9f2 <__fp_pscB>
 a7e:	18 f0       	brcs	.+6      	; 0xa86 <__mulsf3+0x12>
 a80:	95 23       	and	r25, r21
 a82:	09 f0       	breq	.+2      	; 0xa86 <__mulsf3+0x12>
 a84:	a6 cf       	rjmp	.-180    	; 0x9d2 <__fp_inf>
 a86:	ab cf       	rjmp	.-170    	; 0x9de <__fp_nan>
 a88:	11 24       	eor	r1, r1
 a8a:	ee cf       	rjmp	.-36     	; 0xa68 <__fp_szero>

00000a8c <__mulsf3x>:
 a8c:	ca df       	rcall	.-108    	; 0xa22 <__fp_split3>
 a8e:	a0 f3       	brcs	.-24     	; 0xa78 <__mulsf3+0x4>

00000a90 <__mulsf3_pse>:
 a90:	95 9f       	mul	r25, r21
 a92:	d1 f3       	breq	.-12     	; 0xa88 <__mulsf3+0x14>
 a94:	95 0f       	add	r25, r21
 a96:	50 e0       	ldi	r21, 0x00	; 0
 a98:	55 1f       	adc	r21, r21
 a9a:	62 9f       	mul	r22, r18
 a9c:	f0 01       	movw	r30, r0
 a9e:	72 9f       	mul	r23, r18
 aa0:	bb 27       	eor	r27, r27
 aa2:	f0 0d       	add	r31, r0
 aa4:	b1 1d       	adc	r27, r1
 aa6:	63 9f       	mul	r22, r19
 aa8:	aa 27       	eor	r26, r26
 aaa:	f0 0d       	add	r31, r0
 aac:	b1 1d       	adc	r27, r1
 aae:	aa 1f       	adc	r26, r26
 ab0:	64 9f       	mul	r22, r20
 ab2:	66 27       	eor	r22, r22
 ab4:	b0 0d       	add	r27, r0
 ab6:	a1 1d       	adc	r26, r1
 ab8:	66 1f       	adc	r22, r22
 aba:	82 9f       	mul	r24, r18
 abc:	22 27       	eor	r18, r18
 abe:	b0 0d       	add	r27, r0
 ac0:	a1 1d       	adc	r26, r1
 ac2:	62 1f       	adc	r22, r18
 ac4:	73 9f       	mul	r23, r19
 ac6:	b0 0d       	add	r27, r0
 ac8:	a1 1d       	adc	r26, r1
 aca:	62 1f       	adc	r22, r18
 acc:	83 9f       	mul	r24, r19
 ace:	a0 0d       	add	r26, r0
 ad0:	61 1d       	adc	r22, r1
 ad2:	22 1f       	adc	r18, r18
 ad4:	74 9f       	mul	r23, r20
 ad6:	33 27       	eor	r19, r19
 ad8:	a0 0d       	add	r26, r0
 ada:	61 1d       	adc	r22, r1
 adc:	23 1f       	adc	r18, r19
 ade:	84 9f       	mul	r24, r20
 ae0:	60 0d       	add	r22, r0
 ae2:	21 1d       	adc	r18, r1
 ae4:	82 2f       	mov	r24, r18
 ae6:	76 2f       	mov	r23, r22
 ae8:	6a 2f       	mov	r22, r26
 aea:	11 24       	eor	r1, r1
 aec:	9f 57       	subi	r25, 0x7F	; 127
 aee:	50 40       	sbci	r21, 0x00	; 0
 af0:	8a f0       	brmi	.+34     	; 0xb14 <__mulsf3_pse+0x84>
 af2:	e1 f0       	breq	.+56     	; 0xb2c <__mulsf3_pse+0x9c>
 af4:	88 23       	and	r24, r24
 af6:	4a f0       	brmi	.+18     	; 0xb0a <__mulsf3_pse+0x7a>
 af8:	ee 0f       	add	r30, r30
 afa:	ff 1f       	adc	r31, r31
 afc:	bb 1f       	adc	r27, r27
 afe:	66 1f       	adc	r22, r22
 b00:	77 1f       	adc	r23, r23
 b02:	88 1f       	adc	r24, r24
 b04:	91 50       	subi	r25, 0x01	; 1
 b06:	50 40       	sbci	r21, 0x00	; 0
 b08:	a9 f7       	brne	.-22     	; 0xaf4 <__mulsf3_pse+0x64>
 b0a:	9e 3f       	cpi	r25, 0xFE	; 254
 b0c:	51 05       	cpc	r21, r1
 b0e:	70 f0       	brcs	.+28     	; 0xb2c <__mulsf3_pse+0x9c>
 b10:	60 cf       	rjmp	.-320    	; 0x9d2 <__fp_inf>
 b12:	aa cf       	rjmp	.-172    	; 0xa68 <__fp_szero>
 b14:	5f 3f       	cpi	r21, 0xFF	; 255
 b16:	ec f3       	brlt	.-6      	; 0xb12 <__mulsf3_pse+0x82>
 b18:	98 3e       	cpi	r25, 0xE8	; 232
 b1a:	dc f3       	brlt	.-10     	; 0xb12 <__mulsf3_pse+0x82>
 b1c:	86 95       	lsr	r24
 b1e:	77 95       	ror	r23
 b20:	67 95       	ror	r22
 b22:	b7 95       	ror	r27
 b24:	f7 95       	ror	r31
 b26:	e7 95       	ror	r30
 b28:	9f 5f       	subi	r25, 0xFF	; 255
 b2a:	c1 f7       	brne	.-16     	; 0xb1c <__mulsf3_pse+0x8c>
 b2c:	fe 2b       	or	r31, r30
 b2e:	88 0f       	add	r24, r24
 b30:	91 1d       	adc	r25, r1
 b32:	96 95       	lsr	r25
 b34:	87 95       	ror	r24
 b36:	97 f9       	bld	r25, 7
 b38:	08 95       	ret

00000b3a <pow>:
 b3a:	fa 01       	movw	r30, r20
 b3c:	ee 0f       	add	r30, r30
 b3e:	ff 1f       	adc	r31, r31
 b40:	30 96       	adiw	r30, 0x00	; 0
 b42:	21 05       	cpc	r18, r1
 b44:	31 05       	cpc	r19, r1
 b46:	99 f1       	breq	.+102    	; 0xbae <pow+0x74>
 b48:	61 15       	cp	r22, r1
 b4a:	71 05       	cpc	r23, r1
 b4c:	61 f4       	brne	.+24     	; 0xb66 <pow+0x2c>
 b4e:	80 38       	cpi	r24, 0x80	; 128
 b50:	bf e3       	ldi	r27, 0x3F	; 63
 b52:	9b 07       	cpc	r25, r27
 b54:	49 f1       	breq	.+82     	; 0xba8 <pow+0x6e>
 b56:	68 94       	set
 b58:	90 38       	cpi	r25, 0x80	; 128
 b5a:	81 05       	cpc	r24, r1
 b5c:	61 f0       	breq	.+24     	; 0xb76 <pow+0x3c>
 b5e:	80 38       	cpi	r24, 0x80	; 128
 b60:	bf ef       	ldi	r27, 0xFF	; 255
 b62:	9b 07       	cpc	r25, r27
 b64:	41 f0       	breq	.+16     	; 0xb76 <pow+0x3c>
 b66:	99 23       	and	r25, r25
 b68:	42 f5       	brpl	.+80     	; 0xbba <pow+0x80>
 b6a:	ff 3f       	cpi	r31, 0xFF	; 255
 b6c:	e1 05       	cpc	r30, r1
 b6e:	31 05       	cpc	r19, r1
 b70:	21 05       	cpc	r18, r1
 b72:	11 f1       	breq	.+68     	; 0xbb8 <pow+0x7e>
 b74:	e8 94       	clt
 b76:	08 94       	sec
 b78:	e7 95       	ror	r30
 b7a:	d9 01       	movw	r26, r18
 b7c:	aa 23       	and	r26, r26
 b7e:	29 f4       	brne	.+10     	; 0xb8a <pow+0x50>
 b80:	ab 2f       	mov	r26, r27
 b82:	be 2f       	mov	r27, r30
 b84:	f8 5f       	subi	r31, 0xF8	; 248
 b86:	d0 f3       	brcs	.-12     	; 0xb7c <pow+0x42>
 b88:	10 c0       	rjmp	.+32     	; 0xbaa <pow+0x70>
 b8a:	ff 5f       	subi	r31, 0xFF	; 255
 b8c:	70 f4       	brcc	.+28     	; 0xbaa <pow+0x70>
 b8e:	a6 95       	lsr	r26
 b90:	e0 f7       	brcc	.-8      	; 0xb8a <pow+0x50>
 b92:	f7 39       	cpi	r31, 0x97	; 151
 b94:	50 f0       	brcs	.+20     	; 0xbaa <pow+0x70>
 b96:	19 f0       	breq	.+6      	; 0xb9e <pow+0x64>
 b98:	ff 3a       	cpi	r31, 0xAF	; 175
 b9a:	38 f4       	brcc	.+14     	; 0xbaa <pow+0x70>
 b9c:	9f 77       	andi	r25, 0x7F	; 127
 b9e:	9f 93       	push	r25
 ba0:	0c d0       	rcall	.+24     	; 0xbba <pow+0x80>
 ba2:	0f 90       	pop	r0
 ba4:	07 fc       	sbrc	r0, 7
 ba6:	90 58       	subi	r25, 0x80	; 128
 ba8:	08 95       	ret
 baa:	3e f0       	brts	.+14     	; 0xbba <pow+0x80>
 bac:	18 cf       	rjmp	.-464    	; 0x9de <__fp_nan>
 bae:	60 e0       	ldi	r22, 0x00	; 0
 bb0:	70 e0       	ldi	r23, 0x00	; 0
 bb2:	80 e8       	ldi	r24, 0x80	; 128
 bb4:	9f e3       	ldi	r25, 0x3F	; 63
 bb6:	08 95       	ret
 bb8:	4f e7       	ldi	r20, 0x7F	; 127
 bba:	9f 77       	andi	r25, 0x7F	; 127
 bbc:	5f 93       	push	r21
 bbe:	4f 93       	push	r20
 bc0:	3f 93       	push	r19
 bc2:	2f 93       	push	r18
 bc4:	9e d0       	rcall	.+316    	; 0xd02 <log>
 bc6:	2f 91       	pop	r18
 bc8:	3f 91       	pop	r19
 bca:	4f 91       	pop	r20
 bcc:	5f 91       	pop	r21
 bce:	52 df       	rcall	.-348    	; 0xa74 <__mulsf3>
 bd0:	05 c0       	rjmp	.+10     	; 0xbdc <exp>
 bd2:	19 f4       	brne	.+6      	; 0xbda <pow+0xa0>
 bd4:	0e f0       	brts	.+2      	; 0xbd8 <pow+0x9e>
 bd6:	fd ce       	rjmp	.-518    	; 0x9d2 <__fp_inf>
 bd8:	46 cf       	rjmp	.-372    	; 0xa66 <__fp_zero>
 bda:	01 cf       	rjmp	.-510    	; 0x9de <__fp_nan>

00000bdc <exp>:
 bdc:	2a df       	rcall	.-428    	; 0xa32 <__fp_splitA>
 bde:	c8 f3       	brcs	.-14     	; 0xbd2 <pow+0x98>
 be0:	96 38       	cpi	r25, 0x86	; 134
 be2:	c0 f7       	brcc	.-16     	; 0xbd4 <pow+0x9a>
 be4:	07 f8       	bld	r0, 7
 be6:	0f 92       	push	r0
 be8:	e8 94       	clt
 bea:	2b e3       	ldi	r18, 0x3B	; 59
 bec:	3a ea       	ldi	r19, 0xAA	; 170
 bee:	48 eb       	ldi	r20, 0xB8	; 184
 bf0:	5f e7       	ldi	r21, 0x7F	; 127
 bf2:	4e df       	rcall	.-356    	; 0xa90 <__mulsf3_pse>
 bf4:	0f 92       	push	r0
 bf6:	0f 92       	push	r0
 bf8:	0f 92       	push	r0
 bfa:	4d b7       	in	r20, 0x3d	; 61
 bfc:	5e b7       	in	r21, 0x3e	; 62
 bfe:	0f 92       	push	r0
 c00:	c0 d0       	rcall	.+384    	; 0xd82 <modf>
 c02:	e4 ee       	ldi	r30, 0xE4	; 228
 c04:	f0 e0       	ldi	r31, 0x00	; 0
 c06:	16 d0       	rcall	.+44     	; 0xc34 <__fp_powser>
 c08:	4f 91       	pop	r20
 c0a:	5f 91       	pop	r21
 c0c:	ef 91       	pop	r30
 c0e:	ff 91       	pop	r31
 c10:	e5 95       	asr	r30
 c12:	ee 1f       	adc	r30, r30
 c14:	ff 1f       	adc	r31, r31
 c16:	49 f0       	breq	.+18     	; 0xc2a <exp+0x4e>
 c18:	fe 57       	subi	r31, 0x7E	; 126
 c1a:	e0 68       	ori	r30, 0x80	; 128
 c1c:	44 27       	eor	r20, r20
 c1e:	ee 0f       	add	r30, r30
 c20:	44 1f       	adc	r20, r20
 c22:	fa 95       	dec	r31
 c24:	e1 f7       	brne	.-8      	; 0xc1e <exp+0x42>
 c26:	41 95       	neg	r20
 c28:	55 0b       	sbc	r21, r21
 c2a:	32 d0       	rcall	.+100    	; 0xc90 <ldexp>
 c2c:	0f 90       	pop	r0
 c2e:	07 fe       	sbrs	r0, 7
 c30:	26 c0       	rjmp	.+76     	; 0xc7e <inverse>
 c32:	08 95       	ret

00000c34 <__fp_powser>:
 c34:	df 93       	push	r29
 c36:	cf 93       	push	r28
 c38:	1f 93       	push	r17
 c3a:	0f 93       	push	r16
 c3c:	ff 92       	push	r15
 c3e:	ef 92       	push	r14
 c40:	df 92       	push	r13
 c42:	7b 01       	movw	r14, r22
 c44:	8c 01       	movw	r16, r24
 c46:	68 94       	set
 c48:	05 c0       	rjmp	.+10     	; 0xc54 <__fp_powser+0x20>
 c4a:	da 2e       	mov	r13, r26
 c4c:	ef 01       	movw	r28, r30
 c4e:	1e df       	rcall	.-452    	; 0xa8c <__mulsf3x>
 c50:	fe 01       	movw	r30, r28
 c52:	e8 94       	clt
 c54:	a5 91       	lpm	r26, Z+
 c56:	25 91       	lpm	r18, Z+
 c58:	35 91       	lpm	r19, Z+
 c5a:	45 91       	lpm	r20, Z+
 c5c:	55 91       	lpm	r21, Z+
 c5e:	ae f3       	brts	.-22     	; 0xc4a <__fp_powser+0x16>
 c60:	ef 01       	movw	r28, r30
 c62:	d4 d0       	rcall	.+424    	; 0xe0c <__addsf3x>
 c64:	fe 01       	movw	r30, r28
 c66:	97 01       	movw	r18, r14
 c68:	a8 01       	movw	r20, r16
 c6a:	da 94       	dec	r13
 c6c:	79 f7       	brne	.-34     	; 0xc4c <__fp_powser+0x18>
 c6e:	df 90       	pop	r13
 c70:	ef 90       	pop	r14
 c72:	ff 90       	pop	r15
 c74:	0f 91       	pop	r16
 c76:	1f 91       	pop	r17
 c78:	cf 91       	pop	r28
 c7a:	df 91       	pop	r29
 c7c:	08 95       	ret

00000c7e <inverse>:
 c7e:	9b 01       	movw	r18, r22
 c80:	ac 01       	movw	r20, r24
 c82:	60 e0       	ldi	r22, 0x00	; 0
 c84:	70 e0       	ldi	r23, 0x00	; 0
 c86:	80 e8       	ldi	r24, 0x80	; 128
 c88:	9f e3       	ldi	r25, 0x3F	; 63
 c8a:	cd cd       	rjmp	.-1126   	; 0x826 <__divsf3>
 c8c:	a2 ce       	rjmp	.-700    	; 0x9d2 <__fp_inf>
 c8e:	11 c1       	rjmp	.+546    	; 0xeb2 <__fp_mpack>

00000c90 <ldexp>:
 c90:	d0 de       	rcall	.-608    	; 0xa32 <__fp_splitA>
 c92:	e8 f3       	brcs	.-6      	; 0xc8e <inverse+0x10>
 c94:	99 23       	and	r25, r25
 c96:	d9 f3       	breq	.-10     	; 0xc8e <inverse+0x10>
 c98:	94 0f       	add	r25, r20
 c9a:	51 1d       	adc	r21, r1
 c9c:	bb f3       	brvs	.-18     	; 0xc8c <inverse+0xe>
 c9e:	91 50       	subi	r25, 0x01	; 1
 ca0:	50 40       	sbci	r21, 0x00	; 0
 ca2:	94 f0       	brlt	.+36     	; 0xcc8 <ldexp+0x38>
 ca4:	59 f0       	breq	.+22     	; 0xcbc <ldexp+0x2c>
 ca6:	88 23       	and	r24, r24
 ca8:	32 f0       	brmi	.+12     	; 0xcb6 <ldexp+0x26>
 caa:	66 0f       	add	r22, r22
 cac:	77 1f       	adc	r23, r23
 cae:	88 1f       	adc	r24, r24
 cb0:	91 50       	subi	r25, 0x01	; 1
 cb2:	50 40       	sbci	r21, 0x00	; 0
 cb4:	c1 f7       	brne	.-16     	; 0xca6 <ldexp+0x16>
 cb6:	9e 3f       	cpi	r25, 0xFE	; 254
 cb8:	51 05       	cpc	r21, r1
 cba:	44 f7       	brge	.-48     	; 0xc8c <inverse+0xe>
 cbc:	88 0f       	add	r24, r24
 cbe:	91 1d       	adc	r25, r1
 cc0:	96 95       	lsr	r25
 cc2:	87 95       	ror	r24
 cc4:	97 f9       	bld	r25, 7
 cc6:	08 95       	ret
 cc8:	5f 3f       	cpi	r21, 0xFF	; 255
 cca:	ac f0       	brlt	.+42     	; 0xcf6 <ldexp+0x66>
 ccc:	98 3e       	cpi	r25, 0xE8	; 232
 cce:	9c f0       	brlt	.+38     	; 0xcf6 <ldexp+0x66>
 cd0:	bb 27       	eor	r27, r27
 cd2:	86 95       	lsr	r24
 cd4:	77 95       	ror	r23
 cd6:	67 95       	ror	r22
 cd8:	b7 95       	ror	r27
 cda:	08 f4       	brcc	.+2      	; 0xcde <ldexp+0x4e>
 cdc:	b1 60       	ori	r27, 0x01	; 1
 cde:	93 95       	inc	r25
 ce0:	c1 f7       	brne	.-16     	; 0xcd2 <ldexp+0x42>
 ce2:	bb 0f       	add	r27, r27
 ce4:	58 f7       	brcc	.-42     	; 0xcbc <ldexp+0x2c>
 ce6:	11 f4       	brne	.+4      	; 0xcec <ldexp+0x5c>
 ce8:	60 ff       	sbrs	r22, 0
 cea:	e8 cf       	rjmp	.-48     	; 0xcbc <ldexp+0x2c>
 cec:	6f 5f       	subi	r22, 0xFF	; 255
 cee:	7f 4f       	sbci	r23, 0xFF	; 255
 cf0:	8f 4f       	sbci	r24, 0xFF	; 255
 cf2:	9f 4f       	sbci	r25, 0xFF	; 255
 cf4:	e3 cf       	rjmp	.-58     	; 0xcbc <ldexp+0x2c>
 cf6:	b8 ce       	rjmp	.-656    	; 0xa68 <__fp_szero>
 cf8:	0e f0       	brts	.+2      	; 0xcfc <ldexp+0x6c>
 cfa:	db c0       	rjmp	.+438    	; 0xeb2 <__fp_mpack>
 cfc:	70 ce       	rjmp	.-800    	; 0x9de <__fp_nan>
 cfe:	68 94       	set
 d00:	68 ce       	rjmp	.-816    	; 0x9d2 <__fp_inf>

00000d02 <log>:
 d02:	97 de       	rcall	.-722    	; 0xa32 <__fp_splitA>
 d04:	c8 f3       	brcs	.-14     	; 0xcf8 <ldexp+0x68>
 d06:	99 23       	and	r25, r25
 d08:	d1 f3       	breq	.-12     	; 0xcfe <ldexp+0x6e>
 d0a:	c6 f3       	brts	.-16     	; 0xcfc <ldexp+0x6c>
 d0c:	df 93       	push	r29
 d0e:	cf 93       	push	r28
 d10:	1f 93       	push	r17
 d12:	0f 93       	push	r16
 d14:	ff 92       	push	r15
 d16:	c9 2f       	mov	r28, r25
 d18:	dd 27       	eor	r29, r29
 d1a:	88 23       	and	r24, r24
 d1c:	2a f0       	brmi	.+10     	; 0xd28 <log+0x26>
 d1e:	21 97       	sbiw	r28, 0x01	; 1
 d20:	66 0f       	add	r22, r22
 d22:	77 1f       	adc	r23, r23
 d24:	88 1f       	adc	r24, r24
 d26:	da f7       	brpl	.-10     	; 0xd1e <log+0x1c>
 d28:	20 e0       	ldi	r18, 0x00	; 0
 d2a:	30 e0       	ldi	r19, 0x00	; 0
 d2c:	40 e8       	ldi	r20, 0x80	; 128
 d2e:	5f eb       	ldi	r21, 0xBF	; 191
 d30:	9f e3       	ldi	r25, 0x3F	; 63
 d32:	88 39       	cpi	r24, 0x98	; 152
 d34:	20 f0       	brcs	.+8      	; 0xd3e <log+0x3c>
 d36:	80 3e       	cpi	r24, 0xE0	; 224
 d38:	30 f0       	brcs	.+12     	; 0xd46 <log+0x44>
 d3a:	21 96       	adiw	r28, 0x01	; 1
 d3c:	8f 77       	andi	r24, 0x7F	; 127
 d3e:	55 d0       	rcall	.+170    	; 0xdea <__addsf3>
 d40:	ec e0       	ldi	r30, 0x0C	; 12
 d42:	f1 e0       	ldi	r31, 0x01	; 1
 d44:	03 c0       	rjmp	.+6      	; 0xd4c <log+0x4a>
 d46:	51 d0       	rcall	.+162    	; 0xdea <__addsf3>
 d48:	e9 e3       	ldi	r30, 0x39	; 57
 d4a:	f1 e0       	ldi	r31, 0x01	; 1
 d4c:	73 df       	rcall	.-282    	; 0xc34 <__fp_powser>
 d4e:	8b 01       	movw	r16, r22
 d50:	be 01       	movw	r22, r28
 d52:	ec 01       	movw	r28, r24
 d54:	fb 2e       	mov	r15, r27
 d56:	6f 57       	subi	r22, 0x7F	; 127
 d58:	71 09       	sbc	r23, r1
 d5a:	75 95       	asr	r23
 d5c:	77 1f       	adc	r23, r23
 d5e:	88 0b       	sbc	r24, r24
 d60:	99 0b       	sbc	r25, r25
 d62:	fc dd       	rcall	.-1032   	; 0x95c <__floatsisf>
 d64:	28 e1       	ldi	r18, 0x18	; 24
 d66:	32 e7       	ldi	r19, 0x72	; 114
 d68:	41 e3       	ldi	r20, 0x31	; 49
 d6a:	5f e3       	ldi	r21, 0x3F	; 63
 d6c:	8f de       	rcall	.-738    	; 0xa8c <__mulsf3x>
 d6e:	af 2d       	mov	r26, r15
 d70:	98 01       	movw	r18, r16
 d72:	ae 01       	movw	r20, r28
 d74:	ff 90       	pop	r15
 d76:	0f 91       	pop	r16
 d78:	1f 91       	pop	r17
 d7a:	cf 91       	pop	r28
 d7c:	df 91       	pop	r29
 d7e:	46 d0       	rcall	.+140    	; 0xe0c <__addsf3x>
 d80:	3f ce       	rjmp	.-898    	; 0xa00 <__fp_round>

00000d82 <modf>:
 d82:	fa 01       	movw	r30, r20
 d84:	dc 01       	movw	r26, r24
 d86:	aa 0f       	add	r26, r26
 d88:	bb 1f       	adc	r27, r27
 d8a:	9b 01       	movw	r18, r22
 d8c:	ac 01       	movw	r20, r24
 d8e:	bf 57       	subi	r27, 0x7F	; 127
 d90:	28 f4       	brcc	.+10     	; 0xd9c <modf+0x1a>
 d92:	22 27       	eor	r18, r18
 d94:	33 27       	eor	r19, r19
 d96:	44 27       	eor	r20, r20
 d98:	50 78       	andi	r21, 0x80	; 128
 d9a:	1f c0       	rjmp	.+62     	; 0xdda <modf+0x58>
 d9c:	b7 51       	subi	r27, 0x17	; 23
 d9e:	88 f4       	brcc	.+34     	; 0xdc2 <modf+0x40>
 da0:	ab 2f       	mov	r26, r27
 da2:	00 24       	eor	r0, r0
 da4:	46 95       	lsr	r20
 da6:	37 95       	ror	r19
 da8:	27 95       	ror	r18
 daa:	01 1c       	adc	r0, r1
 dac:	a3 95       	inc	r26
 dae:	d2 f3       	brmi	.-12     	; 0xda4 <modf+0x22>
 db0:	00 20       	and	r0, r0
 db2:	69 f0       	breq	.+26     	; 0xdce <modf+0x4c>
 db4:	22 0f       	add	r18, r18
 db6:	33 1f       	adc	r19, r19
 db8:	44 1f       	adc	r20, r20
 dba:	b3 95       	inc	r27
 dbc:	da f3       	brmi	.-10     	; 0xdb4 <modf+0x32>
 dbe:	0d d0       	rcall	.+26     	; 0xdda <modf+0x58>
 dc0:	13 c0       	rjmp	.+38     	; 0xde8 <__subsf3>
 dc2:	61 30       	cpi	r22, 0x01	; 1
 dc4:	71 05       	cpc	r23, r1
 dc6:	a0 e8       	ldi	r26, 0x80	; 128
 dc8:	8a 07       	cpc	r24, r26
 dca:	b9 46       	sbci	r27, 0x69	; 105
 dcc:	30 f4       	brcc	.+12     	; 0xdda <modf+0x58>
 dce:	9b 01       	movw	r18, r22
 dd0:	ac 01       	movw	r20, r24
 dd2:	66 27       	eor	r22, r22
 dd4:	77 27       	eor	r23, r23
 dd6:	88 27       	eor	r24, r24
 dd8:	90 78       	andi	r25, 0x80	; 128
 dda:	30 96       	adiw	r30, 0x00	; 0
 ddc:	21 f0       	breq	.+8      	; 0xde6 <modf+0x64>
 dde:	20 83       	st	Z, r18
 de0:	31 83       	std	Z+1, r19	; 0x01
 de2:	42 83       	std	Z+2, r20	; 0x02
 de4:	53 83       	std	Z+3, r21	; 0x03
 de6:	08 95       	ret

00000de8 <__subsf3>:
 de8:	50 58       	subi	r21, 0x80	; 128

00000dea <__addsf3>:
 dea:	bb 27       	eor	r27, r27
 dec:	aa 27       	eor	r26, r26
 dee:	0e d0       	rcall	.+28     	; 0xe0c <__addsf3x>
 df0:	07 ce       	rjmp	.-1010   	; 0xa00 <__fp_round>
 df2:	f8 dd       	rcall	.-1040   	; 0x9e4 <__fp_pscA>
 df4:	30 f0       	brcs	.+12     	; 0xe02 <__addsf3+0x18>
 df6:	fd dd       	rcall	.-1030   	; 0x9f2 <__fp_pscB>
 df8:	20 f0       	brcs	.+8      	; 0xe02 <__addsf3+0x18>
 dfa:	31 f4       	brne	.+12     	; 0xe08 <__addsf3+0x1e>
 dfc:	9f 3f       	cpi	r25, 0xFF	; 255
 dfe:	11 f4       	brne	.+4      	; 0xe04 <__addsf3+0x1a>
 e00:	1e f4       	brtc	.+6      	; 0xe08 <__addsf3+0x1e>
 e02:	ed cd       	rjmp	.-1062   	; 0x9de <__fp_nan>
 e04:	0e f4       	brtc	.+2      	; 0xe08 <__addsf3+0x1e>
 e06:	e0 95       	com	r30
 e08:	e7 fb       	bst	r30, 7
 e0a:	e3 cd       	rjmp	.-1082   	; 0x9d2 <__fp_inf>

00000e0c <__addsf3x>:
 e0c:	e9 2f       	mov	r30, r25
 e0e:	09 de       	rcall	.-1006   	; 0xa22 <__fp_split3>
 e10:	80 f3       	brcs	.-32     	; 0xdf2 <__addsf3+0x8>
 e12:	ba 17       	cp	r27, r26
 e14:	62 07       	cpc	r22, r18
 e16:	73 07       	cpc	r23, r19
 e18:	84 07       	cpc	r24, r20
 e1a:	95 07       	cpc	r25, r21
 e1c:	18 f0       	brcs	.+6      	; 0xe24 <__addsf3x+0x18>
 e1e:	71 f4       	brne	.+28     	; 0xe3c <__addsf3x+0x30>
 e20:	9e f5       	brtc	.+102    	; 0xe88 <__addsf3x+0x7c>
 e22:	21 ce       	rjmp	.-958    	; 0xa66 <__fp_zero>
 e24:	0e f4       	brtc	.+2      	; 0xe28 <__addsf3x+0x1c>
 e26:	e0 95       	com	r30
 e28:	0b 2e       	mov	r0, r27
 e2a:	ba 2f       	mov	r27, r26
 e2c:	a0 2d       	mov	r26, r0
 e2e:	0b 01       	movw	r0, r22
 e30:	b9 01       	movw	r22, r18
 e32:	90 01       	movw	r18, r0
 e34:	0c 01       	movw	r0, r24
 e36:	ca 01       	movw	r24, r20
 e38:	a0 01       	movw	r20, r0
 e3a:	11 24       	eor	r1, r1
 e3c:	ff 27       	eor	r31, r31
 e3e:	59 1b       	sub	r21, r25
 e40:	99 f0       	breq	.+38     	; 0xe68 <__addsf3x+0x5c>
 e42:	59 3f       	cpi	r21, 0xF9	; 249
 e44:	50 f4       	brcc	.+20     	; 0xe5a <__addsf3x+0x4e>
 e46:	50 3e       	cpi	r21, 0xE0	; 224
 e48:	68 f1       	brcs	.+90     	; 0xea4 <__addsf3x+0x98>
 e4a:	1a 16       	cp	r1, r26
 e4c:	f0 40       	sbci	r31, 0x00	; 0
 e4e:	a2 2f       	mov	r26, r18
 e50:	23 2f       	mov	r18, r19
 e52:	34 2f       	mov	r19, r20
 e54:	44 27       	eor	r20, r20
 e56:	58 5f       	subi	r21, 0xF8	; 248
 e58:	f3 cf       	rjmp	.-26     	; 0xe40 <__addsf3x+0x34>
 e5a:	46 95       	lsr	r20
 e5c:	37 95       	ror	r19
 e5e:	27 95       	ror	r18
 e60:	a7 95       	ror	r26
 e62:	f0 40       	sbci	r31, 0x00	; 0
 e64:	53 95       	inc	r21
 e66:	c9 f7       	brne	.-14     	; 0xe5a <__addsf3x+0x4e>
 e68:	7e f4       	brtc	.+30     	; 0xe88 <__addsf3x+0x7c>
 e6a:	1f 16       	cp	r1, r31
 e6c:	ba 0b       	sbc	r27, r26
 e6e:	62 0b       	sbc	r22, r18
 e70:	73 0b       	sbc	r23, r19
 e72:	84 0b       	sbc	r24, r20
 e74:	ba f0       	brmi	.+46     	; 0xea4 <__addsf3x+0x98>
 e76:	91 50       	subi	r25, 0x01	; 1
 e78:	a1 f0       	breq	.+40     	; 0xea2 <__addsf3x+0x96>
 e7a:	ff 0f       	add	r31, r31
 e7c:	bb 1f       	adc	r27, r27
 e7e:	66 1f       	adc	r22, r22
 e80:	77 1f       	adc	r23, r23
 e82:	88 1f       	adc	r24, r24
 e84:	c2 f7       	brpl	.-16     	; 0xe76 <__addsf3x+0x6a>
 e86:	0e c0       	rjmp	.+28     	; 0xea4 <__addsf3x+0x98>
 e88:	ba 0f       	add	r27, r26
 e8a:	62 1f       	adc	r22, r18
 e8c:	73 1f       	adc	r23, r19
 e8e:	84 1f       	adc	r24, r20
 e90:	48 f4       	brcc	.+18     	; 0xea4 <__addsf3x+0x98>
 e92:	87 95       	ror	r24
 e94:	77 95       	ror	r23
 e96:	67 95       	ror	r22
 e98:	b7 95       	ror	r27
 e9a:	f7 95       	ror	r31
 e9c:	9e 3f       	cpi	r25, 0xFE	; 254
 e9e:	08 f0       	brcs	.+2      	; 0xea2 <__addsf3x+0x96>
 ea0:	b3 cf       	rjmp	.-154    	; 0xe08 <__addsf3+0x1e>
 ea2:	93 95       	inc	r25
 ea4:	88 0f       	add	r24, r24
 ea6:	08 f0       	brcs	.+2      	; 0xeaa <__addsf3x+0x9e>
 ea8:	99 27       	eor	r25, r25
 eaa:	ee 0f       	add	r30, r30
 eac:	97 95       	ror	r25
 eae:	87 95       	ror	r24
 eb0:	08 95       	ret

00000eb2 <__fp_mpack>:
 eb2:	9f 3f       	cpi	r25, 0xFF	; 255
 eb4:	31 f0       	breq	.+12     	; 0xec2 <__fp_mpack_finite+0xc>

00000eb6 <__fp_mpack_finite>:
 eb6:	91 50       	subi	r25, 0x01	; 1
 eb8:	20 f4       	brcc	.+8      	; 0xec2 <__fp_mpack_finite+0xc>
 eba:	87 95       	ror	r24
 ebc:	77 95       	ror	r23
 ebe:	67 95       	ror	r22
 ec0:	b7 95       	ror	r27
 ec2:	88 0f       	add	r24, r24
 ec4:	91 1d       	adc	r25, r1
 ec6:	96 95       	lsr	r25
 ec8:	87 95       	ror	r24
 eca:	97 f9       	bld	r25, 7
 ecc:	08 95       	ret

00000ece <__divmodhi4>:
 ece:	97 fb       	bst	r25, 7
 ed0:	07 2e       	mov	r0, r23
 ed2:	16 f4       	brtc	.+4      	; 0xed8 <__divmodhi4+0xa>
 ed4:	00 94       	com	r0
 ed6:	06 d0       	rcall	.+12     	; 0xee4 <__divmodhi4_neg1>
 ed8:	77 fd       	sbrc	r23, 7
 eda:	08 d0       	rcall	.+16     	; 0xeec <__divmodhi4_neg2>
 edc:	1a d0       	rcall	.+52     	; 0xf12 <__udivmodhi4>
 ede:	07 fc       	sbrc	r0, 7
 ee0:	05 d0       	rcall	.+10     	; 0xeec <__divmodhi4_neg2>
 ee2:	3e f4       	brtc	.+14     	; 0xef2 <__divmodhi4_exit>

00000ee4 <__divmodhi4_neg1>:
 ee4:	90 95       	com	r25
 ee6:	81 95       	neg	r24
 ee8:	9f 4f       	sbci	r25, 0xFF	; 255
 eea:	08 95       	ret

00000eec <__divmodhi4_neg2>:
 eec:	70 95       	com	r23
 eee:	61 95       	neg	r22
 ef0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ef2 <__divmodhi4_exit>:
 ef2:	08 95       	ret

00000ef4 <__umulhisi3>:
 ef4:	a2 9f       	mul	r26, r18
 ef6:	b0 01       	movw	r22, r0
 ef8:	b3 9f       	mul	r27, r19
 efa:	c0 01       	movw	r24, r0
 efc:	a3 9f       	mul	r26, r19
 efe:	70 0d       	add	r23, r0
 f00:	81 1d       	adc	r24, r1
 f02:	11 24       	eor	r1, r1
 f04:	91 1d       	adc	r25, r1
 f06:	b2 9f       	mul	r27, r18
 f08:	70 0d       	add	r23, r0
 f0a:	81 1d       	adc	r24, r1
 f0c:	11 24       	eor	r1, r1
 f0e:	91 1d       	adc	r25, r1
 f10:	08 95       	ret

00000f12 <__udivmodhi4>:
 f12:	aa 1b       	sub	r26, r26
 f14:	bb 1b       	sub	r27, r27
 f16:	51 e1       	ldi	r21, 0x11	; 17
 f18:	07 c0       	rjmp	.+14     	; 0xf28 <__udivmodhi4_ep>

00000f1a <__udivmodhi4_loop>:
 f1a:	aa 1f       	adc	r26, r26
 f1c:	bb 1f       	adc	r27, r27
 f1e:	a6 17       	cp	r26, r22
 f20:	b7 07       	cpc	r27, r23
 f22:	10 f0       	brcs	.+4      	; 0xf28 <__udivmodhi4_ep>
 f24:	a6 1b       	sub	r26, r22
 f26:	b7 0b       	sbc	r27, r23

00000f28 <__udivmodhi4_ep>:
 f28:	88 1f       	adc	r24, r24
 f2a:	99 1f       	adc	r25, r25
 f2c:	5a 95       	dec	r21
 f2e:	a9 f7       	brne	.-22     	; 0xf1a <__udivmodhi4_loop>
 f30:	80 95       	com	r24
 f32:	90 95       	com	r25
 f34:	bc 01       	movw	r22, r24
 f36:	cd 01       	movw	r24, r26
 f38:	08 95       	ret

00000f3a <_exit>:
 f3a:	f8 94       	cli

00000f3c <__stop_program>:
 f3c:	ff cf       	rjmp	.-2      	; 0xf3c <__stop_program>
